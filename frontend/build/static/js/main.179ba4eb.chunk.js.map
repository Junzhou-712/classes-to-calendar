{"version":3,"sources":["components/Navbar.js","components/HomePage.js","components/DragAndDrop.js","components/UploadPage.js","components/Toast.js","components/UMNClass.js","api/GCalClient.js","components/EventsActions.js","components/ClassesPage.js","components/SuccessPage.js","components/InstructionDialog.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","titleWrapper","flexGrow","title","cursor","navButton","marginLeft","spacing","Navbar","props","classes","history","useHistory","openInstructions","AppBar","position","Toolbar","Typography","variant","className","onClick","push","Button","color","component","Link","to","homeContent","padding","display","alignItems","width","homeButtons","marginTop","card","HomePage","Fragment","Container","maxWidth","Card","CardContent","align","gutterBottom","paragraph","Grid","container","justify","item","DragAndDrop","state","dragging","userHasSelectedImage","dragCounter","dropRef","React","createRef","allowedFiles","isImageFile","file","ext","name","match","includes","toLowerCase","handleDrag","e","preventDefault","stopPropagation","handleDragIn","dataTransfer","items","length","setState","handleDragOut","handleDrop","files","openToast","handleImageSelect","clearData","target","div","this","current","addEventListener","removeEventListener","upload","style","fontSize","drop","imagePreview","selectedImageLoaded","previewImage","src","selectedImageSrc","alt","CircularProgress","variante","cardStyle","htmlFor","ref","dropzoneArea","uploadInfo","CardActions","buttonContainer","accept","input","id","type","onChange","disabled","handleUpload","Component","withStyles","border","minHeight","transition","backgroundColor","palette","grey","flexDirection","justifyContent","maxHeight","uploadContent","uploadContainer","loadingOverlay","top","left","zIndex","height","borderRadius","fade","header","marginBottom","pageContent","UploadPage","useState","selectedImage","setSelectedImage","setSelectedImageSrc","setSelectedImageLoaded","uploadStatus","setUploadStatus","image","reader","FileReader","readAsDataURL","onloadend","result","url","process","formData","FormData","append","axios","post","headers","then","res","Array","isArray","data","Error","handleClasses","catch","error","console","msg","response","message","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","green","dark","primary","main","amber","icon","iconVariant","opacity","marginRight","Toast","handleClose","open","Icon","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","SnackbarContent","aria-describedby","action","IconButton","key","aria-label","heading","typography","pxToRem","fontWeight","fontWeightRegular","inputField","UMNClass","cls","handleClassChange","setTitle","handleChanges","value","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Object","keys","map","i","FormControl","InputLabel","replace","txt","charAt","toUpperCase","substr","Input","defaultValue","GCalClient","signedIn","gapi","onLoadCallback","calendar","initClient","bind","handleClientLoad","handleAuthClick","updateSigninStatus","get","window","getConfig","config","client","init","auth2","getAuthInstance","isSignedIn","listen","script","document","createElement","body","appendChild","onload","load","signIn","log","calendarList","list","summary","timeZone","calendars","insert","event","events","calendarId","resource","optionsForm","paddingLeft","paddingRight","formField","extendedIcon","infoText","actionSection","EventsActions","sendToGcal","authorizeGcal","gcalClient","exportCalendar","calOption","setCalOption","calList","setCalList","calId","setCalId","newCalName","setNewCalName","children","RadioGroup","listCalendars","FormControlLabel","control","Radio","label","TextField","Select","cal","MenuItem","filter","Divider","classesPage","overflow","content","classesContainer","classList","flex","actionCol","classesInfo","borderBottomLeftRadius","borderBottomRightRadius","ClassesPage","setSignedIn","eventsStatus","setEventsStatus","useEffect","status","paddingBottom","extractedClasses","newCalendarName","existingCalendar","createCalendar","Promise","resolve","reject","setCalendar","eventCounter","forEach","createEvent","createEvents","icsString","ics","element","setAttribute","encodeURIComponent","click","removeChild","successCard","successContent","successIcon","successText","SuccessPage","InstructionDialog","Dialog","DialogTitle","DialogContent","List","dense","ListItem","ListItemIcon","ListItemText","DialogActions","footer","bottom","footerLink","Footer","href","appTheme","createMuiTheme","light","contrastText","secondary","background","backgroundSize","App","setExtractedClasses","toastOpen","setToastOpen","toastMessage","setToastMessage","toastVariant","setToastVariant","instructionsOpen","setInstructionsOpen","handleToastOpen","handleInstructionsOpen","CssBaseline","ThemeProvider","exact","path","rest","indexOf","splice","reason","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.179ba4eb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  titleWrapper: {\n    flexGrow: 1\n  },\n  title: {\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  navButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction Navbar(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const { openInstructions } = props;\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar>\n        <Typography variant=\"h5\" className={classes.titleWrapper}>\n          <span onClick={() => history.push('/')} className={classes.title}>\n            Classes to Calendar\n          </span>\n        </Typography>\n        <Button color=\"inherit\" className={classes.navButton} onClick={openInstructions}>\n          Instructions\n        </Button>\n        <Button\n          color=\"inherit\"\n          className={classes.navButton}\n          component={Link}\n          to=\"/upload\"\n          onClick={openInstructions}\n        >\n          Upload\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nNavbar.propTypes = {\n  openInstructions: PropTypes.func.isRequired\n};\n\nexport default Navbar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  homeContent: {\n    padding: theme.spacing(8, 0, 6),\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%'\n  },\n  homeButtons: {\n    marginTop: theme.spacing(4)\n  },\n  card: {\n    padding: '50px'\n  }\n}));\n\nexport default function HomePage(props) {\n  const classes = useStyles();\n  const { openInstructions } = props;\n\n  return (\n    <React.Fragment>\n      <div className={classes.homeContent}>\n        <Container maxWidth=\"md\">\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Classes to Calendar\n              </Typography>\n              <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                An online app that takes an screenshot of your class schedule and enters it in\n                Google Calendar.\n              </Typography>\n              <div className={classes.homeButtons}>\n                <Grid container spacing={2} justify=\"center\">\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      component={Link}\n                      to=\"/upload\"\n                      onClick={openInstructions}\n                    >\n                      Upload class schedule image\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n            </CardContent>\n          </Card>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport { Card, CardContent, Button, CardActions, Typography, withStyles } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloudUploadOutlinedIcon from '@material-ui/icons/CloudUploadOutlined';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\n\nconst styles = theme => ({\n  cardStyle: {\n    padding: '20px'\n  },\n  dropzoneArea: {\n    display: 'flex',\n    position: 'relative',\n    border: '2px dashed #ccc',\n    width: '100%',\n    minHeight: '400px',\n    padding: '20px',\n    transition: 'all 0.1s ease-in-out',\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200],\n      cursor: 'pointer'\n    }\n  },\n  uploadInfo: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  previewImage: {\n    maxHeight: '400px',\n    maxWidth: '400px'\n  },\n  input: {\n    display: 'none'\n  },\n  buttonContainer: {\n    justifyContent: 'center'\n  }\n});\n\nexport class DragAndDrop extends Component {\n  state = {\n    dragging: false,\n    userHasSelectedImage: false\n  };\n  dragCounter = 0;\n  dropRef = React.createRef();\n  allowedFiles = ['jpg', 'jpeg', 'png'];\n\n  isImageFile = file => {\n    const ext = file.name.match(/\\.([0-9a-z]+)/i);\n    return this.allowedFiles.includes(ext[1].toLowerCase());\n  };\n\n  handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  handleDragIn = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    // Increment a drag counter to handle children dragin events\n    this.dragCounter++;\n    // Check to ensure there are files\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      this.setState({ dragging: true });\n    }\n  };\n\n  handleDragOut = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    // Decrement the dragcounter for child events and\n    // set the the state to false if the counter is zero\n    this.dragCounter--;\n    if (this.dragCounter > 0) return;\n    this.setState({ dragging: false });\n  };\n\n  /**\n   * Handles the selection of an image by drag and drop\n   */\n  handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.setState({ dragging: false });\n    // Check to ensure there are files being dragged\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const file = e.dataTransfer.files[0];\n      // Check to ensure the file is an image\n      if (!this.isImageFile(file)) {\n        this.props.openToast('Invalid file type.', 'error');\n        return;\n      }\n      this.setState({ userHasSelectedImage: true });\n      // Pass the image to the parent\n      this.props.handleImageSelect(file);\n      e.dataTransfer.clearData();\n      this.dragCounter = 0;\n    }\n  };\n\n  /**\n   * Handles the selecting of an image using the input\n   */\n  handleImageSelect = e => {\n    this.setState({ dragging: false });\n    if (e.target.files && e.target.files.length > 0) {\n      this.setState({ userHasSelectedImage: true });\n      // Pass the image to the parent\n      this.props.handleImageSelect(e.target.files[0]);\n      this.dragCounter = 0;\n    }\n  };\n\n  componentDidMount() {\n    let div = this.dropRef.current;\n    this.dragCounter = 0;\n    div.addEventListener('dragenter', this.handleDragIn);\n    div.addEventListener('dragleave', this.handleDragOut);\n    div.addEventListener('dragover', this.handleDrag);\n    div.addEventListener('drop', this.handleDrop);\n  }\n\n  componentWillUnmount() {\n    let div = this.dropRef.current;\n    div.removeEventListener('dragenter', this.handleDragIn);\n    div.removeEventListener('dragleave', this.handleDragOut);\n    div.removeEventListener('dragover', this.handleDrag);\n    div.removeEventListener('drop', this.handleDrop);\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const upload = (\n      <React.Fragment>\n        <CloudUploadOutlinedIcon style={{ fontSize: 80 }} color=\"action\"></CloudUploadOutlinedIcon>\n        <Typography component=\"h4\" variant=\"h4\" color=\"textSecondary\">\n          Drag and drop screenshot here\n        </Typography>\n      </React.Fragment>\n    );\n\n    const drop = (\n      <React.Fragment>\n        <AddPhotoAlternateIcon style={{ fontSize: 80 }} color=\"action\"></AddPhotoAlternateIcon>\n        <Typography component=\"h4\" variant=\"h4\" color=\"textSecondary\">\n          Add image\n        </Typography>\n      </React.Fragment>\n    );\n\n    const imagePreview = (\n      <React.Fragment>\n        {this.props.selectedImageLoaded ? (\n          <img className={classes.previewImage} src={this.props.selectedImageSrc} alt=\"Uploaded\" />\n        ) : (\n          <CircularProgress />\n        )}\n      </React.Fragment>\n    );\n\n    return (\n      <Card variante=\"outlined\" className={classes.cardStyle}>\n        <CardContent>\n          <label htmlFor=\"image-upload\">\n            <div ref={this.dropRef} className={classes.dropzoneArea}>\n              <div className={classes.uploadInfo}>\n                {!this.state.userHasSelectedImage\n                  ? !this.state.dragging\n                    ? upload\n                    : drop\n                  : imagePreview}\n              </div>\n            </div>\n          </label>\n        </CardContent>\n        <CardActions className={classes.buttonContainer}>\n          <input\n            accept=\"image/*\"\n            className={classes.input}\n            id=\"image-upload\"\n            type=\"file\"\n            onChange={this.handleImageSelect}\n          />\n          <label htmlFor=\"image-upload\">\n            <Button variant=\"contained\" color=\"primary\" component=\"span\">\n              Browse\n            </Button>\n          </label>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!this.props.selectedImageSrc}\n            onClick={this.props.handleUpload}\n          >\n            Upload\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(styles)(DragAndDrop);\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport DragAndDrop from './DragAndDrop';\nimport { Container, makeStyles, CircularProgress, Typography, fade } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  uploadContent: {\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  uploadContainer: {\n    position: 'relative',\n    padding: 0\n  },\n  loadingOverlay: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 9999,\n    width: '100%',\n    height: '100%',\n    borderRadius: '4px',\n    backgroundColor: fade(theme.palette.grey[900], 0.4)\n  },\n  header: {\n    color: theme.palette.grey[50],\n    marginBottom: theme.spacing(2)\n  },\n  pageContent: {\n    marginTop: '15vh'\n  }\n}));\n\nfunction UploadPage(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [selectedImageSrc, setSelectedImageSrc] = useState('');\n  const [selectedImageLoaded, setSelectedImageLoaded] = useState(false);\n  const [uploadStatus, setUploadStatus] = useState('');\n\n  /**\n   * Handles the selecting of an image and sets it to be previewed\n   */\n  const handleImageSelect = image => {\n    setSelectedImage(image);\n    previewImage(image);\n  };\n\n  /**\n   * Uses the image on the props to preview the image in the uploader by setting the selectedImageSrc\n   */\n  const previewImage = image => {\n    let reader = new FileReader();\n    reader.readAsDataURL(image);\n    reader.onloadend = () => {\n      setSelectedImageSrc(reader.result);\n      setSelectedImageLoaded(true);\n    };\n  };\n\n  /**\n   * Uploades the image to the api endpoint. It sends a POST request to the endpoint and handles\n   * any errors returned form the server\n   */\n  const handleUpload = () => {\n    let url = `${process.env.REACT_APP_API_ENDPOINT}/api/upload`;\n\n    // Added the file to the form data for submission\n    let formData = new FormData();\n    formData.append('file', selectedImage);\n\n    // Make the post request with the image\n    setUploadStatus('uploading');\n    axios\n      .post(url, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      })\n      .then(res => {\n        props.openToast('Classes extracted', 'success');\n        setUploadStatus('uploaded');\n        // Assert that the returned data is an array\n        if (res && Array.isArray(res.data) && res.data.length > 0) {\n          props.handleClasses(res.data);\n          history.push('/classes');\n        } else {\n          throw new Error('No classes extracted. Ensure your image meets the requirements.');\n        }\n      })\n      .catch(error => {\n        console.error('Error with image upload', error);\n        let msg = '';\n        if (error.response) {\n          msg = error.response.data.message;\n        } else {\n          msg = error.message;\n        }\n        props.openToast(msg, 'error');\n        setUploadStatus('uploaded');\n      });\n  };\n\n  return (\n    <div className={classes.uploadContent}>\n      <Container className={classes.pageContent}>\n        <Container className={classes.header}>\n          <Typography variant=\"h2\" align=\"center\" component=\"h1\" color=\"inherit\">\n            Upload Schedule\n          </Typography>\n        </Container>\n        <Container maxWidth=\"sm\" className={classes.uploadContainer}>\n          <DragAndDrop\n            handleImageSelect={handleImageSelect}\n            handleUpload={handleUpload}\n            selectedImageLoaded={selectedImageLoaded}\n            selectedImageSrc={selectedImageSrc}\n            openToast={props.openToast}\n          ></DragAndDrop>\n          {uploadStatus === 'uploading' && (\n            <div className={classes.loadingOverlay}>\n              <CircularProgress />\n            </div>\n          )}\n        </Container>\n      </Container>\n    </div>\n  );\n}\n\nUploadPage.propTypes = {\n  openToast: PropTypes.func.isRequired,\n  handleClasses: PropTypes.func.isRequired\n};\n\nexport default UploadPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport { green, amber } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nfunction Toast(props) {\n  const classes = useStyles();\n  const { message, handleClose, variant, open } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      open={open}\n      onClose={handleClose}\n      autoHideDuration={5000}\n    >\n      <SnackbarContent\n        className={classes[variant]}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={classes.icon + ' ' + classes.iconVariant} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>\n        ]}\n      />\n    </Snackbar>\n  );\n}\n\nToast.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\n};\n\nexport default Toast;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  inputField: {\n    marginBottom: theme.spacing(1)\n  },\n  info: {\n    flexDirection: 'column'\n  }\n}));\n\nfunction UMNClass(props) {\n  const classes = useStyles();\n  const { cls, handleClassChange } = props;\n  const [title, setTitle] = useState(cls.name);\n\n  /**\n   * Converts a string in snake case to title case. Used for converting the props on\n   * the class to labels.\n   */\n  const snakeToTitleCase = str => {\n    str = str.replace(/_/g, ' ');\n    str = str.replace(/\\w\\S*/g, txt => {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n    return str;\n  };\n\n  /**\n   * Handles input changes on the class by taking the name on the input and using\n   * it as a prop on the class to change it to the input value. Must manually set the name\n   * to the title because it only updates with the state.\n   */\n  const handleChanges = e => {\n    cls[e.target.name] = e.target.value;\n    handleClassChange(cls);\n    // Set the title to the name if changed\n    if (e.target.name === 'name') {\n      setTitle(cls.name);\n    }\n  };\n\n  return (\n    <ExpansionPanel key={cls.id}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\">\n        <Typography className={classes.heading} color=\"primary\">\n          {title}\n        </Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails className={classes.info}>\n        {Object.keys(cls).map(\n          (name, i) =>\n            name !== 'id' && (\n              <FormControl key={i} className={classes.inputField}>\n                <InputLabel>{snakeToTitleCase(name)}</InputLabel>\n                <Input name={name} defaultValue={cls[name]} onChange={handleChanges} />\n              </FormControl>\n            )\n        )}\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}\n\nUMNClass.propTypes = {\n  cls: PropTypes.object.isRequired,\n  handleClassChange: PropTypes.func.isRequired\n};\n\nexport default UMNClass;\n","import axios from 'axios';\n\nclass GCalClient {\n  signedIn = false;\n  gapi = null;\n  onLoadCallback = null;\n  calendar = null;\n\n  constructor() {\n    this.initClient = this.initClient.bind(this);\n    this.handleClientLoad = this.handleClientLoad.bind(this);\n    this.handleAuthClick = this.handleAuthClick.bind(this);\n    this.updateSigninStatus = this.updateSigninStatus.bind(this);\n    this.handleClientLoad();\n  }\n\n  async getConfig() {\n    return await axios.get(`${process.env.REACT_APP_API_ENDPOINT}/api/google-config`);\n  }\n\n  async initClient() {\n    this.gapi = window['gapi'];\n    const config = await this.getConfig();\n    this.gapi.client\n      .init(config.data)\n      .then(() => {\n        // Listen for sign-in state changes.\n        this.gapi.auth2.getAuthInstance().isSignedIn.listen(this.updateSigninStatus);\n        // Handle the initial sign-in state.\n        this.updateSigninStatus(this.gapi.auth2.getAuthInstance().isSignedIn.get());\n        if (this.onLoadCallback) {\n          this.onLoadCallback(this.signedIn);\n        }\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  }\n\n  handleClientLoad() {\n    this.gapi = window['gapi'];\n    var script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/api.js';\n    document.body.appendChild(script);\n    script.onload = () => {\n      window['gapi'].load('client:auth2', this.initClient);\n    };\n  }\n\n  handleAuthClick() {\n    if (this.gapi) {\n      this.gapi.auth2.getAuthInstance().signIn();\n    } else {\n      console.log('Error: this.gapi not loaded');\n    }\n  }\n\n  updateSigninStatus(isSignedIn) {\n    this.signedIn = isSignedIn;\n  }\n\n  listCalendars() {\n    return this.gapi.client.calendar.calendarList.list();\n  }\n\n  createCalendar(name) {\n    const calendar = {\n      summary: name,\n      timeZone: 'America/Chicago'\n    };\n    return this.gapi.client.calendar.calendars.insert(calendar).then(res => {\n      this.calendar = res.result;\n      console.log(res);\n    });\n  }\n\n  createEvent(event) {\n    return this.gapi.client.calendar.events.insert({\n      calendarId: this.calendar.id,\n      resource: event\n    });\n  }\n\n  setCalendar(calendar) {\n    this.calendar = calendar;\n  }\n}\n\nexport default GCalClient;\n","import React, { useState } from 'react';\nimport { makeStyles, Divider } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Button,\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography\n} from '@material-ui/core';\nimport TodayIcon from '@material-ui/icons/Today';\nimport SendIcon from '@material-ui/icons/Send';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    position: 'relative',\n    marginBottom: theme.spacing(1)\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  optionsForm: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  formField: {\n    marginLeft: theme.spacing(4),\n    marginBottom: theme.spacing(2)\n  },\n  extendedIcon: {\n    marginRight: '4px'\n  },\n  infoText: {\n    marginBottom: theme.spacing(1)\n  },\n  actionSection: {\n    marginBottom: theme.spacing(3),\n    marginTop: theme.spacing(2),\n    '&:last-child': {\n      marginBottom: 0\n    },\n    '&:first-child': {\n      marginTop: 0\n    }\n  }\n}));\n\nfunction EventsActions(props) {\n  const classes = useStyles();\n  const { sendToGcal, authorizeGcal, gcalClient, signedIn, exportCalendar } = props;\n  const [calOption, setCalOption] = useState('new');\n  const [calList, setCalList] = useState([]);\n  const [calId, setCalId] = useState('');\n  const [newCalName, setNewCalName] = useState('Class Schedule');\n\n  /**\n   * Handles the switching of new and existing calendars.\n   * If wanting to add to an existing calendar, on the first time\n   * the option is selected, this will get the list of calendars\n   * for the user\n   */\n  const handleOptionChange = e => {\n    setCalOption(e.target.value);\n    if (e.target.value === 'existing' && calList.length === 0) {\n      gcalClient\n        .listCalendars()\n        .then(res => {\n          setCalList(res.result.items);\n        })\n        .catch(error => {\n          props.openToast('Could not retrieve your calendar list.', 'error');\n          console.error(error);\n        });\n    }\n  };\n\n  /**\n   * Sets the options for the calendar and calls the sendToGcal\n   * method with the options.\n   */\n  const handleSubmit = e => {\n    if (calOption === 'new') {\n      if (!newCalName) {\n        props.openToast('Must specify a name for the new calendar', 'error');\n      } else {\n        sendToGcal(calOption, newCalName, null);\n      }\n    } else if (calOption === 'existing') {\n      if (!calId) {\n        props.openToast('Must select a calendar', 'error');\n      } else {\n        const calendar = calList.filter(cal => cal.id === calId)[0];\n        sendToGcal(calOption, null, calendar);\n      }\n    }\n  };\n\n  const handleCalIdChange = e => {\n    setCalId(e.target.value);\n  };\n\n  const handleNewCalChange = e => {\n    setNewCalName(e.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <Card className={classes.card}>\n        <CardContent>\n          {props.children}\n          <div className={classes.actionSection}>\n            <Typography variant=\"h6\" component=\"h6\">\n              Add to Google Calendar\n            </Typography>\n            <p className={classes.infoText}>\n              You can add your classes to Google Calendar by either making a new calendar or adding\n              them to an existing one. You must authorize GCal in order to do this.\n            </p>\n\n            <div className={classes.optionsForm}>\n              <FormControl component=\"fieldset\">\n                <RadioGroup\n                  aria-label=\"calendarOption\"\n                  name=\"calendarOption\"\n                  defaultValue={calOption}\n                  onChange={handleOptionChange}\n                >\n                  <FormControlLabel\n                    value=\"new\"\n                    control={<Radio />}\n                    label=\"Make a new calendar\"\n                    disabled={!signedIn}\n                  />\n                  {calOption === 'new' && (\n                    <TextField\n                      className={classes.formField}\n                      label=\"New calendar name\"\n                      variant=\"filled\"\n                      onChange={handleNewCalChange}\n                      defaultValue={newCalName}\n                      disabled={!signedIn}\n                    />\n                  )}\n                  <FormControlLabel\n                    value=\"existing\"\n                    control={<Radio />}\n                    label=\"Add to existing calendar\"\n                    disabled={!signedIn}\n                  />\n                  {calOption === 'existing' && (\n                    <FormControl className={classes.formField} style={{ width: '300px' }}>\n                      <InputLabel>Select from calendars...</InputLabel>\n                      <Select\n                        label=\"existing-calendar\"\n                        defaultValue=\"\"\n                        onChange={handleCalIdChange}\n                        style={{ width: '300px' }}\n                      >\n                        {calList.map(cal => (\n                          <MenuItem key={cal.id} value={cal.id}>\n                            {cal.summary}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  )}\n                </RadioGroup>\n              </FormControl>\n            </div>\n\n            <div className={classes.buttonContainer}>\n              <Button onClick={authorizeGcal}>\n                <TodayIcon className={classes.extendedIcon} />\n                Authorize GCal\n              </Button>\n              <Button color=\"primary\" onClick={handleSubmit} disabled={!signedIn}>\n                <SendIcon className={classes.extendedIcon} />\n                Send to GCal\n              </Button>\n            </div>\n          </div>\n\n          <Divider />\n\n          <div className={classes.actionSection}>\n            <Typography variant=\"h6\" component=\"h6\">\n              Export to Another Calendar\n            </Typography>\n            <p className={classes.infoText}>\n              You can also export your classes to another calendar by clicking the export button.\n              This will download a file that you can import to any other calendar service.\n            </p>\n            <div className={classes.buttonContainer}>\n              <Button color=\"primary\" onClick={exportCalendar}>\n                <GetAppIcon className={classes.extendedIcon} />\n                Download\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n}\n\nEventsActions.propTypes = {\n  sendToGcal: PropTypes.func.isRequired,\n  authorizeGcal: PropTypes.func.isRequired,\n  gcalClient: PropTypes.object.isRequired,\n  exportCalendar: PropTypes.func.isRequired,\n  openToast: PropTypes.func.isRequired,\n  signedIn: PropTypes.bool.isRequired\n};\n\nexport default EventsActions;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport UMNClass from './UMNClass';\nimport {\n  makeStyles,\n  Container,\n  Typography,\n  CircularProgress,\n  fade,\n  Card,\n  CardContent\n} from '@material-ui/core';\n\nimport GCalClient from '../api/GCalClient';\nimport axios from 'axios';\nimport EventsActions from './EventsActions';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  classesPage: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'center',\n    overflow: 'auto'\n  },\n  loadingOverlay: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 9999,\n    width: '100%',\n    height: '100%',\n    borderRadius: '4px',\n    backgroundColor: fade(theme.palette.grey[900], 0.4)\n  },\n  content: {\n    marginTop: '10vh',\n    marginBottom: '10vh'\n  },\n  classesContainer: {\n    display: 'flex'\n  },\n  classList: {\n    flex: 3\n  },\n  actionCol: {\n    flex: 2,\n    position: 'relative',\n    marginLeft: theme.spacing(1)\n  },\n  header: {\n    color: theme.palette.grey[50],\n    marginBottom: theme.spacing(2)\n  },\n  classesInfo: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  }\n}));\n\nconst gcalClient = new GCalClient();\n\nfunction ClassesPage(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [signedIn, setSignedIn] = useState(gcalClient.signedIn);\n  const [eventsStatus, setEventsStatus] = useState('unbegun');\n\n  useEffect(() => {\n    // Set the gcal client to set the signed in status once finished\n    gcalClient.onLoadCallback = status => {\n      setSignedIn(status);\n    };\n  }, []);\n\n  /**\n   * Authorizes the user with Google Calendar through the api\n   */\n  const authorizeGcal = () => {\n    gcalClient.handleAuthClick();\n  };\n\n  /**\n   * Sends the classes back to the server to serialize into events.\n   * Then takes these events and adds them to the calendar.\n   */\n  const createEvents = () => {\n    // Ensure there is a calendar to add to\n    if (!gcalClient.calendar) {\n      props.openToast('A calendar must be selected', 'error');\n    }\n\n    // Make the requrest to server for the events\n    let events = [];\n    let eventCounter = 0;\n    axios\n      .post(`${process.env.REACT_APP_API_ENDPOINT}/api/events`, props.extractedClasses)\n      .then(res => {\n        events = res.data;\n        // Add each event to the calendar on the gcalClient\n        events.forEach(event => {\n          gcalClient\n            .createEvent(event)\n            .then(res => {\n              eventCounter++;\n              // Check to see if the last event has been created\n              if (eventCounter === events.length) {\n                setEventsStatus('created');\n                history.push('/success');\n              }\n            })\n            .catch(error => {\n              props.openToast('Could not create event ' + event.summary, 'error');\n              console.error(error);\n            });\n        });\n      })\n      .catch(error => {\n        props.openToast(error.message, 'error');\n        console.error(error);\n      });\n  };\n\n  /**\n   * Either creates a new calendar or sets one on the client.\n   * Returns a promise for the next steps.\n   */\n  const setCalendar = (calOption, name, calendar) => {\n    if (calOption === 'new') {\n      // Create a new calendar with the api\n      if (!name) {\n        return new Promise((resolve, reject) => reject());\n      }\n      return gcalClient.createCalendar(name);\n    } else if (calOption === 'existing') {\n      // Set the calendar\n      if (!calendar) {\n        return new Promise((resolve, reject) => reject());\n      }\n      return new Promise((resolve, reject) => {\n        gcalClient.setCalendar(calendar);\n        resolve();\n      });\n    }\n  };\n\n  /**\n   * Sends the updates events back to the server. Then creates a\n   * new calendar on gcal (or selects an existing one) and adds\n   * the events to there. Will not work if the user has not authorized\n   * Gcal.\n   */\n  const sendToGcal = (calOption, newCalendarName, existingCalendar) => {\n    setEventsStatus('creating');\n    setCalendar(calOption, newCalendarName, existingCalendar)\n      .then(() => {\n        // Add the events to the calendar once successful\n        createEvents();\n      })\n      .catch(error => {\n        props.openToast('Could not create or add to calendar.', 'error');\n      });\n  };\n\n  /**\n   * Sends the updated events back to the server, which converts them\n   * to icalendar events. This function then creates a download.\n   */\n  const exportCalendar = () => {\n    axios\n      .post(`${process.env.REACT_APP_API_ENDPOINT}/api/ics`, props.extractedClasses)\n      .then(res => {\n        const icsString = res.data.ics;\n        // Create an invisible link element to download the file\n        var element = document.createElement('a');\n        element.setAttribute(\n          'href',\n          'data:text/calendar;charset=utf-8,' + encodeURIComponent(icsString)\n        );\n        element.setAttribute('download', 'class-calendar.ics');\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n      })\n      .catch(error => {\n        props.openToast('Could create ics file. Please try again.', 'error');\n        console.error(error);\n      });\n  };\n\n  return (\n    <div className={classes.classesPage}>\n      <Container className={classes.content}>\n        <Container className={classes.header}>\n          <Typography variant=\"h2\" align=\"center\" component=\"h1\" color=\"inherit\">\n            Review Classes\n          </Typography>\n        </Container>\n        <Container className={classes.classesContainer}>\n          <div className={classes.classList}>\n            <Card className={classes.classesInfo}>\n              <CardContent style={{ paddingBottom: '16px' }}>\n                The classes extracted from your screenshot are below. Review and edit the info for\n                each class by clicking on it and changing anything that's incorrect.\n              </CardContent>\n            </Card>\n            {props.extractedClasses.map(cls => (\n              <UMNClass key={cls.id} cls={cls} handleClassChange={props.handleClassChange} />\n            ))}\n          </div>\n          <div className={classes.actionCol}>\n            <EventsActions\n              sendToGcal={sendToGcal}\n              authorizeGcal={authorizeGcal}\n              gcalClient={gcalClient}\n              exportCalendar={exportCalendar}\n              signedIn={signedIn}\n              openToast={props.openToast}\n            >\n              {eventsStatus === 'creating' && (\n                <div className={classes.loadingOverlay}>\n                  <CircularProgress />\n                </div>\n              )}\n            </EventsActions>\n          </div>\n        </Container>\n      </Container>\n    </div>\n  );\n}\n\nClassesPage.propTypes = {\n  extractedClasses: PropTypes.array.isRequired,\n  handleClassChange: PropTypes.func.isRequired,\n  openToast: PropTypes.func.isRequired\n};\n\nexport default ClassesPage;\n","import React from 'react';\nimport { makeStyles, Card, CardContent, Typography } from '@material-ui/core';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  successCard: {\n    maxWidth: '800px',\n    maxHeight: '400px',\n    width: '100%',\n    padding: '50px',\n    backgroundColor: theme.palette.success.main\n  },\n  successContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n  successIcon: {\n    fontSize: '120px',\n    marginBottom: theme.spacing(2),\n    color: theme.palette.grey[200]\n  },\n  successText: {\n    color: theme.palette.grey[200]\n  }\n}));\n\nfunction SuccessPage() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.pageContent}>\n      <Card className={classes.successCard}>\n        <CardContent className={classes.successContent}>\n          <CheckCircleOutlineIcon className={classes.successIcon} />\n          <Typography variant=\"h1\" component=\"h1\" className={classes.successText}>\n            Success\n          </Typography>\n          <Typography className={classes.successText}>Check your Google Calendar</Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default SuccessPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Dialog,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  DialogContent,\n  Typography,\n  DialogActions,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    maxWidth: '960px',\n    width: '100%'\n  }\n}));\n\nfunction InstructionDialog(props) {\n  const classes = useStyles();\n  const { open, onClose } = props;\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\">\n      <DialogTitle id=\"simple-dialog-title\">How To</DialogTitle>\n      <DialogContent className={classes.content}>\n        <List component=\"nav\" dense>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>1.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              Go to myu.umn.edu, click on academics, and go to the 'My Classes' tab.\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>2.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              Click to a week where all the classes appear. (If the first week doesn't have classes\n              on Monday for instance, go to the second week so the Monday classes can be seen.)\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>3.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              Take a screenshot of the entire schedule and save it locally. Make sure the days of\n              the week at the top of each column are in the screenshot.\n            </ListItemText>\n          </ListItem>\n          <ListItem style={{ display: 'text', justifyContent: 'center' }}>\n            <img src=\"example-calendar.png\" height=\"400\" alt=\"Example Calendar\" />\n          </ListItem>\n\n          <ListItem>\n            <ListItemIcon>\n              <Typography>4.</Typography>\n            </ListItemIcon>\n            <ListItemText>Upload the image here and wait for the classes to be read.</ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>5.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              After the classes have been loaded, correct any data that is wrong by clicking the\n              class and directly editing it.\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>6.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              Authorize the app to use your Google Calendar, and set your calendar creation options.\n              Then submit and voilà.\n            </ListItemText>\n          </ListItem>\n        </List>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nInstructionDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nexport default InstructionDialog;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar, Typography, Link } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst useStyles = makeStyles(theme => ({\n  footer: {\n    top: 'auto',\n    bottom: 0\n  },\n  content: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    color: theme.palette.grey[500]\n  },\n  footerLink: {\n    marginLeft: theme.spacing(4),\n    marginRight: theme.spacing(4),\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Footer() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" className={classes.footer}>\n      <Toolbar>\n        <Typography className={classes.content}>\n          <Link\n            href=\"https://github.com/broden-wanner/classes-to-calendar/issues\"\n            color=\"inherit\"\n            className={classes.footerLink}\n          >\n            <ErrorIcon className={classes.icon} />\n            Issues\n          </Link>\n          <Link\n            href=\"https://github.com/broden-wanner/classes-to-calendar\"\n            color=\"inherit\"\n            className={classes.footerLink}\n          >\n            <GitHubIcon className={classes.icon} />\n            Github repo\n          </Link>\n          <Link\n            href=\"mailto:broden.wanner@outlook.com\"\n            color=\"inherit\"\n            className={classes.footerLink}\n          >\n            <HelpIcon className={classes.icon} />\n            Contact\n          </Link>\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core';\n\nimport Navbar from './components/Navbar';\nimport HomePage from './components/HomePage';\nimport UploadPage from './components/UploadPage';\nimport Toast from './components/Toast';\nimport ClassesPage from './components/ClassesPage';\nimport SuccessPage from './components/SuccessPage';\nimport InstructionDialog from './components/InstructionDialog';\nimport Footer from './components/Footer';\n\nconst appTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#913447',\n      main: '#760219',\n      dark: '#520111',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#FFDF7E',\n      main: '#FFD75E',\n      dark: '#b29641',\n      contrastText: '#000'\n    }\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  background: {\n    display: 'flex',\n    height: '100vh',\n    width: '100vw',\n    background: 'url(\"gopher.jpg\") no-repeat center center fixed',\n    backgroundSize: 'cover'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [extractedClasses, setExtractedClasses] = useState([]);\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastVariant, setToastVariant] = useState('error');\n  const [instructionsOpen, setInstructionsOpen] = useState(false);\n\n  /**\n   * Function to be passed to the upload component to set the classes on the app\n   */\n  const handleExtractedClasses = data => {\n    setExtractedClasses(data);\n  };\n\n  /**\n   * Passed to the UMNClass component to handle the editing of classes. Simply\n   * replaces the class in the extracted classes array with the argument class\n   */\n  const handleClassChange = cls => {\n    const i = extractedClasses.indexOf(cls);\n    extractedClasses.splice(i, 1, cls);\n    setExtractedClasses(extractedClasses);\n  };\n\n  /**\n   * Closes the toast message\n   */\n  const handleToastClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setToastOpen(false);\n  };\n\n  /**\n   * Opens the toast with a message and a color variant\n   */\n  const handleToastOpen = (message, variant) => {\n    setToastOpen(true);\n    setToastMessage(message);\n    setToastVariant(variant);\n  };\n\n  /**\n   * Simply opens the instructions modal\n   */\n  const handleInstructionsOpen = () => {\n    setInstructionsOpen(true);\n  };\n\n  /**\n   * Simply closes the instructions modal\n   */\n  const handleInstructionsClose = () => {\n    setInstructionsOpen(false);\n  };\n\n  /**\n   * Generates a route component that will only be rendered if there are classes\n   */\n  const ClassesRequiredRoute = ({ component, children, ...rest }) => (\n    <Route {...rest}>{extractedClasses.length !== 0 ? children : <Redirect to=\"/\" />}</Route>\n  );\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ThemeProvider theme={appTheme}>\n        <div className={classes.background}>\n          <Router>\n            <Navbar openInstructions={handleInstructionsOpen}></Navbar>\n            <Route exact path=\"/\">\n              <HomePage openInstructions={handleInstructionsOpen} />\n            </Route>\n            <Route exact path=\"/upload\">\n              <UploadPage openToast={handleToastOpen} handleClasses={handleExtractedClasses} />\n            </Route>\n            <Route exact path=\"/success\">\n              <SuccessPage />\n            </Route>\n            <ClassesRequiredRoute exact path=\"/classes\">\n              <ClassesPage\n                extractedClasses={extractedClasses}\n                handleClassChange={handleClassChange}\n                openToast={handleToastOpen}\n              />\n            </ClassesRequiredRoute>\n            <Toast\n              open={toastOpen}\n              handleClose={handleToastClose}\n              message={toastMessage}\n              variant={toastVariant}\n            />\n            <InstructionDialog open={instructionsOpen} onClose={handleInstructionsClose} />\n          </Router>\n          <Footer />\n        </div>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}