{"version":3,"sources":["components/Navbar.js","components/HomePage.js","components/DragAndDrop.js","components/UploadPage.js","components/Toast.js","components/UMNClass.js","api/GCalClient.js","components/EventsActions.js","components/ClassesPage.js","components/InstructionDialog.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","titleWrapper","flexGrow","title","cursor","navLink","marginLeft","spacing","Navbar","props","classes","history","useHistory","openInstructions","AppBar","position","Toolbar","Typography","variant","className","onClick","push","Button","color","component","Link","to","href","homeContent","padding","display","alignItems","width","homeButtons","marginTop","card","HomePage","Fragment","Container","maxWidth","Card","CardContent","align","gutterBottom","paragraph","Grid","container","justify","item","DragAndDrop","state","dragging","userHasSelectedImage","dragCounter","dropRef","React","createRef","allowedFiles","isImageFile","file","ext","name","match","includes","toLowerCase","handleDrag","e","preventDefault","stopPropagation","handleDragIn","dataTransfer","items","length","setState","handleDragOut","handleDrop","files","openToast","handleImageSelect","clearData","target","div","this","current","addEventListener","removeEventListener","upload","style","fontSize","drop","imagePreview","selectedImageLoaded","previewImage","src","selectedImageSrc","alt","CircularProgress","variante","cardStyle","htmlFor","ref","dropzoneArea","uploadInfo","CardActions","buttonContainer","accept","input","id","type","onChange","disabled","handleUpload","Component","withStyles","border","minHeight","transition","backgroundColor","palette","grey","flexDirection","justifyContent","maxHeight","uploadContent","uploadContainer","loadingOverlay","top","left","zIndex","height","borderRadius","fade","header","marginBottom","pageContent","UploadPage","useState","selectedImage","setSelectedImage","setSelectedImageSrc","setSelectedImageLoaded","uploadStatus","setUploadStatus","image","reader","FileReader","readAsDataURL","onloadend","result","url","process","formData","FormData","append","axios","post","headers","then","res","data","extracted_all","Array","isArray","Error","handleClasses","catch","error","console","msg","response","message","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","green","dark","primary","main","amber","icon","iconVariant","opacity","marginRight","Toast","handleClose","open","Icon","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","SnackbarContent","aria-describedby","action","IconButton","key","aria-label","ExpansionPanel","root","boxShadow","borderBottom","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","content","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","heading","typography","pxToRem","fontWeight","fontWeightRegular","inputField","UMNClass","cls","handleClassChange","handleClassDelete","setTitle","handleChanges","value","expandIcon","aria-controls","Object","keys","map","i","FormControl","required","InputLabel","replace","txt","charAt","toUpperCase","substr","Input","defaultValue","ExpansionPanelActions","GCalClient","signedIn","gapi","onLoadCallback","calendar","GoogleAuth","initClient","bind","handleClientLoad","handleAuthClick","updateSigninStatus","get","window","getConfig","config","client","init","auth2","getAuthInstance","isSignedIn","listen","script","document","createElement","body","appendChild","onload","load","signIn","calendarList","list","summary","timeZone","calendars","insert","log","event","events","calendarId","resource","optionsForm","paddingLeft","paddingRight","formField","extendedIcon","infoText","actionSection","EventsActions","sendToGcal","authorizeGcal","gcalClient","exportCalendar","calOption","setCalOption","calList","setCalList","calId","setCalId","newCalName","setNewCalName","RadioGroup","listCalendars","FormControlLabel","control","Radio","label","TextField","Select","cal","MenuItem","filter","Divider","children","classesPage","overflow","classesContainer","classList","textAlign","flex","actionCol","classesInfo","borderBottomLeftRadius","borderBottomRightRadius","fabButton","right","ClassesPage","setSignedIn","eventsStatus","setEventsStatus","status","extractedClasses","paddingBottom","Fab","handleClassAdd","newCalendarName","existingCalendar","createCalendar","Promise","resolve","reject","setCalendar","eventCounter","forEach","createEvent","createEvents","icsString","ics","element","setAttribute","encodeURIComponent","click","removeChild","InstructionDialog","Dialog","DialogTitle","DialogContent","List","dense","ListItem","ListItemIcon","ListItemText","DialogActions","appTheme","createMuiTheme","light","contrastText","secondary","background","backgroundSize","App","JSON","parse","localStorage","getItem","setExtractedClasses","toastOpen","setToastOpen","toastMessage","setToastMessage","toastVariant","setToastVariant","instructionsOpen","setInstructionsOpen","useEffect","setItem","stringify","handleToastOpen","handleInstructionsOpen","CssBaseline","ThemeProvider","exact","path","indexOf","splice","newClass","dept","course_num","section","location","start_time","end_time","start_date","end_date","days_of_week","reason","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5294750b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  titleWrapper: {\n    flexGrow: 1\n  },\n  title: {\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  navLink: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction Navbar(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const { openInstructions } = props;\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar>\n        <Typography variant=\"h5\" className={classes.titleWrapper}>\n          <span onClick={() => history.push('/')} className={classes.title}>\n            Classes to Calendar\n          </span>\n        </Typography>\n        <Button\n          color=\"inherit\"\n          className={classes.navLink}\n          component={Link}\n          to=\"/upload\"\n          onClick={openInstructions}\n        >\n          Upload\n        </Button>\n        <Button color=\"inherit\" className={classes.navLink} onClick={openInstructions}>\n          Instructions\n        </Button>\n        <Button\n          href=\"https://github.com/broden-wanner/classes-to-calendar/issues\"\n          color=\"inherit\"\n          className={classes.navLink}\n        >\n          Issues\n        </Button>\n        <Button\n          href=\"https://github.com/broden-wanner/classes-to-calendar\"\n          color=\"inherit\"\n          className={classes.navLink}\n        >\n          Github repo\n        </Button>\n        <Button href=\"mailto:broden.wanner@outlook.com\" color=\"inherit\" className={classes.navLink}>\n          Contact\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nNavbar.propTypes = {\n  openInstructions: PropTypes.func.isRequired\n};\n\nexport default Navbar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  homeContent: {\n    padding: theme.spacing(8, 0, 6),\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%'\n  },\n  homeButtons: {\n    marginTop: theme.spacing(4)\n  },\n  card: {\n    padding: '50px'\n  }\n}));\n\nexport default function HomePage(props) {\n  const classes = useStyles();\n  const { openInstructions } = props;\n\n  return (\n    <React.Fragment>\n      <div className={classes.homeContent}>\n        <Container maxWidth=\"md\">\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Classes to Calendar\n              </Typography>\n              <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                An online app that takes an screenshot of your class schedule and enters it in\n                Google Calendar, or you can export it to whatever calendar you want.\n              </Typography>\n              <div className={classes.homeButtons}>\n                <Grid container spacing={2} justify=\"center\">\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      component={Link}\n                      to=\"/upload\"\n                      onClick={openInstructions}\n                    >\n                      Upload class schedule image\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n            </CardContent>\n          </Card>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport { Card, CardContent, Button, CardActions, Typography, withStyles } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloudUploadOutlinedIcon from '@material-ui/icons/CloudUploadOutlined';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\n\nconst styles = theme => ({\n  cardStyle: {\n    padding: '20px'\n  },\n  dropzoneArea: {\n    display: 'flex',\n    position: 'relative',\n    border: '2px dashed #ccc',\n    width: '100%',\n    minHeight: '400px',\n    padding: '20px',\n    transition: 'all 0.1s ease-in-out',\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200],\n      cursor: 'pointer'\n    }\n  },\n  uploadInfo: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  previewImage: {\n    maxHeight: '400px',\n    maxWidth: '400px'\n  },\n  input: {\n    display: 'none'\n  },\n  buttonContainer: {\n    justifyContent: 'center'\n  }\n});\n\nexport class DragAndDrop extends Component {\n  state = {\n    dragging: false,\n    userHasSelectedImage: false\n  };\n  dragCounter = 0;\n  dropRef = React.createRef();\n  allowedFiles = ['jpg', 'jpeg', 'png'];\n\n  isImageFile = file => {\n    const ext = file.name.match(/\\.([0-9a-z]+)/i);\n    return this.allowedFiles.includes(ext[1].toLowerCase());\n  };\n\n  handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  handleDragIn = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    // Increment a drag counter to handle children dragin events\n    this.dragCounter++;\n    // Check to ensure there are files\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      this.setState({ dragging: true });\n    }\n  };\n\n  handleDragOut = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    // Decrement the dragcounter for child events and\n    // set the the state to false if the counter is zero\n    this.dragCounter--;\n    if (this.dragCounter > 0) return;\n    this.setState({ dragging: false });\n  };\n\n  /**\n   * Handles the selection of an image by drag and drop\n   */\n  handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.setState({ dragging: false });\n    // Check to ensure there are files being dragged\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const file = e.dataTransfer.files[0];\n      // Check to ensure the file is an image\n      if (!this.isImageFile(file)) {\n        this.props.openToast('Invalid file type.', 'error');\n        return;\n      }\n      this.setState({ userHasSelectedImage: true });\n      // Pass the image to the parent\n      this.props.handleImageSelect(file);\n      e.dataTransfer.clearData();\n      this.dragCounter = 0;\n    }\n  };\n\n  /**\n   * Handles the selecting of an image using the input\n   */\n  handleImageSelect = e => {\n    this.setState({ dragging: false });\n    if (e.target.files && e.target.files.length > 0) {\n      this.setState({ userHasSelectedImage: true });\n      // Pass the image to the parent\n      this.props.handleImageSelect(e.target.files[0]);\n      this.dragCounter = 0;\n    }\n  };\n\n  componentDidMount() {\n    let div = this.dropRef.current;\n    this.dragCounter = 0;\n    div.addEventListener('dragenter', this.handleDragIn);\n    div.addEventListener('dragleave', this.handleDragOut);\n    div.addEventListener('dragover', this.handleDrag);\n    div.addEventListener('drop', this.handleDrop);\n  }\n\n  componentWillUnmount() {\n    let div = this.dropRef.current;\n    div.removeEventListener('dragenter', this.handleDragIn);\n    div.removeEventListener('dragleave', this.handleDragOut);\n    div.removeEventListener('dragover', this.handleDrag);\n    div.removeEventListener('drop', this.handleDrop);\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const upload = (\n      <React.Fragment>\n        <CloudUploadOutlinedIcon style={{ fontSize: 80 }} color=\"action\"></CloudUploadOutlinedIcon>\n        <Typography component=\"h4\" variant=\"h4\" color=\"textSecondary\">\n          Drag and drop screenshot here\n        </Typography>\n      </React.Fragment>\n    );\n\n    const drop = (\n      <React.Fragment>\n        <AddPhotoAlternateIcon style={{ fontSize: 80 }} color=\"action\"></AddPhotoAlternateIcon>\n        <Typography component=\"h4\" variant=\"h4\" color=\"textSecondary\">\n          Add image\n        </Typography>\n      </React.Fragment>\n    );\n\n    const imagePreview = (\n      <React.Fragment>\n        {this.props.selectedImageLoaded ? (\n          <img className={classes.previewImage} src={this.props.selectedImageSrc} alt=\"Uploaded\" />\n        ) : (\n          <CircularProgress />\n        )}\n      </React.Fragment>\n    );\n\n    return (\n      <Card variante=\"outlined\" className={classes.cardStyle}>\n        <CardContent>\n          <label htmlFor=\"image-upload\">\n            <div ref={this.dropRef} className={classes.dropzoneArea}>\n              <div className={classes.uploadInfo}>\n                {!this.state.userHasSelectedImage\n                  ? !this.state.dragging\n                    ? upload\n                    : drop\n                  : imagePreview}\n              </div>\n            </div>\n          </label>\n        </CardContent>\n        <CardActions className={classes.buttonContainer}>\n          <input\n            accept=\"image/*\"\n            className={classes.input}\n            id=\"image-upload\"\n            type=\"file\"\n            onChange={this.handleImageSelect}\n          />\n          <label htmlFor=\"image-upload\">\n            <Button variant=\"contained\" color=\"primary\" component=\"span\">\n              Browse\n            </Button>\n          </label>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!this.props.selectedImageSrc}\n            onClick={this.props.handleUpload}\n          >\n            Upload\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(styles)(DragAndDrop);\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport DragAndDrop from './DragAndDrop';\nimport { Container, makeStyles, CircularProgress, Typography, fade } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  uploadContent: {\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  uploadContainer: {\n    position: 'relative',\n    padding: 0\n  },\n  loadingOverlay: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 9999,\n    width: '100%',\n    height: '100%',\n    borderRadius: '4px',\n    backgroundColor: fade(theme.palette.grey[900], 0.4)\n  },\n  header: {\n    color: theme.palette.grey[50],\n    marginBottom: theme.spacing(2)\n  },\n  pageContent: {\n    marginTop: '15vh'\n  }\n}));\n\nfunction UploadPage(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [selectedImageSrc, setSelectedImageSrc] = useState('');\n  const [selectedImageLoaded, setSelectedImageLoaded] = useState(false);\n  const [uploadStatus, setUploadStatus] = useState('');\n\n  /**\n   * Handles the selecting of an image and sets it to be previewed\n   */\n  const handleImageSelect = image => {\n    setSelectedImage(image);\n    previewImage(image);\n  };\n\n  /**\n   * Uses the image on the props to preview the image in the uploader by setting the selectedImageSrc\n   */\n  const previewImage = image => {\n    let reader = new FileReader();\n    reader.readAsDataURL(image);\n    reader.onloadend = () => {\n      setSelectedImageSrc(reader.result);\n      setSelectedImageLoaded(true);\n    };\n  };\n\n  /**\n   * Uploades the image to the api endpoint. It sends a POST request to the endpoint and handles\n   * any errors returned form the server\n   */\n  const handleUpload = () => {\n    let url = `${process.env.REACT_APP_API_ENDPOINT}/api/upload`;\n\n    // Added the file to the form data for submission\n    let formData = new FormData();\n    formData.append('file', selectedImage);\n\n    // Make the post request with the image\n    setUploadStatus('uploading');\n    axios\n      .post(url, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      })\n      .then(res => {\n        setUploadStatus('uploaded');\n        const { classes, extracted_all } = res.data;\n        // Assert that the returned data is an array\n        if (classes && Array.isArray(classes) && classes.length > 0) {\n          // Add the classes to the app\n          props.handleClasses(classes);\n          // Handle not all classes being extracted\n          if (extracted_all) {\n            props.openToast('Classes extracted', 'success');\n          } else {\n            props.openToast('Only some data extracted. Fill in the missing info.', 'warning');\n          }\n          // Redirect to the classes page\n          history.push('/classes');\n        } else {\n          throw new Error('No classes extracted. Ensure your image meets the requirements.');\n        }\n      })\n      .catch(error => {\n        console.error('Error with image upload', error);\n        let msg = '';\n        if (error.response) {\n          msg = error.response.data.message;\n        } else {\n          msg = error.message;\n        }\n        props.openToast(msg, 'error');\n        setUploadStatus('uploaded');\n      });\n  };\n\n  return (\n    <div className={classes.uploadContent}>\n      <Container className={classes.pageContent}>\n        <Container className={classes.header}>\n          <Typography variant=\"h2\" align=\"center\" component=\"h1\" color=\"inherit\">\n            Upload Schedule\n          </Typography>\n        </Container>\n        <Container maxWidth=\"sm\" className={classes.uploadContainer}>\n          <DragAndDrop\n            handleImageSelect={handleImageSelect}\n            handleUpload={handleUpload}\n            selectedImageLoaded={selectedImageLoaded}\n            selectedImageSrc={selectedImageSrc}\n            openToast={props.openToast}\n          ></DragAndDrop>\n          {uploadStatus === 'uploading' && (\n            <div className={classes.loadingOverlay}>\n              <CircularProgress />\n            </div>\n          )}\n        </Container>\n      </Container>\n    </div>\n  );\n}\n\nUploadPage.propTypes = {\n  openToast: PropTypes.func.isRequired,\n  handleClasses: PropTypes.func.isRequired\n};\n\nexport default UploadPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport { green, amber } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nfunction Toast(props) {\n  const classes = useStyles();\n  const { message, handleClose, variant, open } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      open={open}\n      onClose={handleClose}\n      autoHideDuration={4000}\n    >\n      <SnackbarContent\n        className={classes[variant]}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={classes.icon + ' ' + classes.iconVariant} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>\n        ]}\n      />\n    </Snackbar>\n  );\n}\n\nToast.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\n};\n\nexport default Toast;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, ExpansionPanelActions } from '@material-ui/core';\n\nconst ExpansionPanel = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0\n    },\n    '&:before': {\n      display: 'none'\n    },\n    '&$expanded': {\n      margin: 'auto'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56\n    }\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  inputField: {\n    marginBottom: theme.spacing(1)\n  },\n  info: {\n    flexDirection: 'column'\n  }\n}));\n\nfunction UMNClass(props) {\n  const classes = useStyles();\n  const { cls, handleClassChange, handleClassDelete } = props;\n  const [title, setTitle] = useState(cls.name);\n\n  /**\n   * Converts a string in snake case to title case. Used for converting the props on\n   * the class to labels.\n   */\n  const snakeToTitleCase = str => {\n    str = str.replace(/_/g, ' ');\n    str = str.replace(/\\w\\S*/g, txt => {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n    return str;\n  };\n\n  /**\n   * Handles input changes on the class by taking the name on the input and using\n   * it as a prop on the class to change it to the input value. Must manually set the name\n   * to the title because it only updates with the state.\n   */\n  const handleChanges = e => {\n    cls[e.target.name] = e.target.value;\n    handleClassChange(cls);\n    // Set the title to the name if changed\n    if (e.target.name === 'name') {\n      setTitle(cls.name);\n    }\n  };\n\n  /**\n   * Remove the class from the extracted class list\n   */\n  const handleRemove = () => {\n    handleClassDelete(cls);\n  };\n\n  return (\n    <ExpansionPanel key={cls.id}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\">\n        <Typography className={classes.heading} color=\"primary\">\n          {title}\n        </Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails className={classes.info}>\n        {Object.keys(cls).map(\n          (name, i) =>\n            name !== 'id' && (\n              <FormControl key={i} className={classes.inputField} required={true}>\n                <InputLabel>{snakeToTitleCase(name)}</InputLabel>\n                <Input name={name} defaultValue={cls[name]} onChange={handleChanges} />\n              </FormControl>\n            )\n        )}\n      </ExpansionPanelDetails>\n      <ExpansionPanelActions>\n        <Button color=\"primary\" onClick={handleRemove} variant=\"contained\">\n          Remove\n        </Button>\n      </ExpansionPanelActions>\n    </ExpansionPanel>\n  );\n}\n\nUMNClass.propTypes = {\n  cls: PropTypes.object.isRequired,\n  handleClassChange: PropTypes.func.isRequired,\n  handleClassDelete: PropTypes.func.isRequired\n};\n\nexport default UMNClass;\n","import axios from 'axios';\n\nclass GCalClient {\n  signedIn = false;\n  gapi = null;\n  onLoadCallback = null;\n  calendar = null;\n  GoogleAuth = null;\n\n  constructor() {\n    this.initClient = this.initClient.bind(this);\n    this.handleClientLoad = this.handleClientLoad.bind(this);\n    this.handleAuthClick = this.handleAuthClick.bind(this);\n    this.updateSigninStatus = this.updateSigninStatus.bind(this);\n    this.handleClientLoad();\n  }\n\n  /**\n   * Gets the api config from the backend\n   */\n  async getConfig() {\n    return await axios.get(`${process.env.REACT_APP_API_ENDPOINT}/api/google-config`);\n  }\n\n  /**\n   * Performs the inital auth setup:\n   * Gets the config and initializes the Google API client\n   * Sets the GoogleAuth object and listens for signedIn status\n   */\n  async initClient() {\n    this.gapi = window['gapi'];\n    const config = await this.getConfig();\n    this.gapi.client\n      .init(config.data)\n      .then(() => {\n        // Get the google auth instance\n        this.GoogleAuth = this.gapi.auth2.getAuthInstance();\n        if (!this.GoogleAuth) {\n          throw new Error('Could not authorize Google API');\n        }\n\n        // Listen for sign-in state changes.\n        this.GoogleAuth.isSignedIn.listen(this.updateSigninStatus);\n\n        // Handle the initial sign-in state.\n        this.updateSigninStatus(this.GoogleAuth.isSignedIn.get());\n\n        // Call the callback\n        if (this.onLoadCallback) {\n          this.onLoadCallback(this.signedIn);\n        }\n      })\n      .catch(e => {\n        console.error('Error in setting up the google client:');\n        console.error(e);\n      });\n  }\n\n  /**\n   * Add the Google API Client script to the DOM and load.\n   * When done loading, call this.initClient\n   */\n  handleClientLoad() {\n    this.gapi = window['gapi'];\n    var script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/api.js';\n    document.body.appendChild(script);\n    script.onload = () => {\n      window['gapi'].load('client:auth2', this.initClient);\n    };\n  }\n\n  /**\n   * Signs the users in using the GoogleAuth object\n   */\n  handleAuthClick() {\n    if (this.GoogleAuth) {\n      this.GoogleAuth.signIn();\n    } else {\n      console.error('App not authorized with Google');\n    }\n  }\n\n  /**\n   * Callback to be passed into the listen state to update the signed in status\n   * @param {boolean} isSignedIn\n   */\n  updateSigninStatus(isSignedIn) {\n    this.signedIn = isSignedIn;\n    // Call the callback\n    if (this.onLoadCallback) {\n      this.onLoadCallback(isSignedIn);\n    }\n  }\n\n  /**\n   * Gets the calendar list of the user.\n   * @returns {Promise}\n   */\n  listCalendars() {\n    return this.gapi.client.calendar.calendarList.list();\n  }\n\n  /**\n   * Creates a new calendar for the user\n   * @param {string} name - name of the new calendar to create\n   * @returns {Promise}\n   */\n  createCalendar(name) {\n    const calendar = {\n      summary: name,\n      timeZone: 'America/Chicago'\n    };\n    return this.gapi.client.calendar.calendars.insert(calendar).then(res => {\n      this.calendar = res.result;\n      console.log(res);\n    });\n  }\n\n  /**\n   * Adds a new event to the calendar specificed by this.calendar\n   * @param {object} event - the event to add to a calendar\n   */\n  createEvent(event) {\n    return this.gapi.client.calendar.events.insert({\n      calendarId: this.calendar.id,\n      resource: event\n    });\n  }\n\n  /**\n   * Sets the calendar on the client\n   * @param {object} calendar - calendar object\n   */\n  setCalendar(calendar) {\n    this.calendar = calendar;\n  }\n}\n\nexport default GCalClient;\n","import React, { useState } from 'react';\nimport { makeStyles, Divider } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Button,\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography\n} from '@material-ui/core';\nimport TodayIcon from '@material-ui/icons/Today';\nimport SendIcon from '@material-ui/icons/Send';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    position: 'relative',\n    marginBottom: theme.spacing(1)\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  optionsForm: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  formField: {\n    marginLeft: theme.spacing(4),\n    marginBottom: theme.spacing(2)\n  },\n  extendedIcon: {\n    marginRight: '4px'\n  },\n  infoText: {\n    marginBottom: theme.spacing(1)\n  },\n  actionSection: {\n    marginBottom: theme.spacing(3),\n    marginTop: theme.spacing(2),\n    '&:last-child': {\n      marginBottom: 0\n    },\n    '&:first-child': {\n      marginTop: 0\n    }\n  }\n}));\n\nfunction EventsActions(props) {\n  const classes = useStyles();\n  const { sendToGcal, authorizeGcal, gcalClient, signedIn, exportCalendar } = props;\n  const [calOption, setCalOption] = useState('new');\n  const [calList, setCalList] = useState([]);\n  const [calId, setCalId] = useState('');\n  const [newCalName, setNewCalName] = useState('Class Schedule');\n\n  /**\n   * Handles the switching of new and existing calendars.\n   * If wanting to add to an existing calendar, on the first time\n   * the option is selected, this will get the list of calendars\n   * for the user\n   */\n  const handleOptionChange = e => {\n    setCalOption(e.target.value);\n    if (e.target.value === 'existing' && calList.length === 0) {\n      gcalClient\n        .listCalendars()\n        .then(res => {\n          setCalList(res.result.items);\n        })\n        .catch(error => {\n          props.openToast('Could not retrieve your calendar list.', 'error');\n          console.error(error);\n        });\n    }\n  };\n\n  /**\n   * Sets the options for the calendar and calls the sendToGcal\n   * method with the options.\n   */\n  const handleSubmit = e => {\n    if (calOption === 'new') {\n      if (!newCalName) {\n        props.openToast('Must specify a name for the new calendar', 'error');\n      } else {\n        sendToGcal(calOption, newCalName, null);\n      }\n    } else if (calOption === 'existing') {\n      if (!calId) {\n        props.openToast('Must select a calendar', 'error');\n      } else {\n        const calendar = calList.filter(cal => cal.id === calId)[0];\n        sendToGcal(calOption, null, calendar);\n      }\n    }\n  };\n\n  const handleCalIdChange = e => {\n    setCalId(e.target.value);\n  };\n\n  const handleNewCalChange = e => {\n    setNewCalName(e.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <Card className={classes.card}>\n        <CardContent>\n          <div className={classes.actionSection}>\n            <Typography variant=\"h6\" component=\"h6\">\n              Add to Google Calendar\n            </Typography>\n            <p className={classes.infoText}>\n              You can add your classes to Google Calendar by either making a new calendar or adding\n              them to an existing one. You must authorize GCal in order to do this.\n            </p>\n\n            <div className={classes.optionsForm}>\n              <FormControl component=\"fieldset\">\n                <RadioGroup\n                  aria-label=\"calendarOption\"\n                  name=\"calendarOption\"\n                  defaultValue={calOption}\n                  onChange={handleOptionChange}\n                >\n                  <FormControlLabel\n                    value=\"new\"\n                    control={<Radio />}\n                    label=\"Make a new calendar\"\n                    disabled={!signedIn}\n                  />\n                  {calOption === 'new' && (\n                    <TextField\n                      className={classes.formField}\n                      label=\"New calendar name\"\n                      variant=\"filled\"\n                      onChange={handleNewCalChange}\n                      defaultValue={newCalName}\n                      disabled={!signedIn}\n                    />\n                  )}\n                  <FormControlLabel\n                    value=\"existing\"\n                    control={<Radio />}\n                    label=\"Add to existing calendar\"\n                    disabled={!signedIn}\n                  />\n                  {calOption === 'existing' && (\n                    <FormControl className={classes.formField} style={{ width: '300px' }}>\n                      <InputLabel>Select from calendars...</InputLabel>\n                      <Select\n                        label=\"existing-calendar\"\n                        defaultValue=\"\"\n                        onChange={handleCalIdChange}\n                        style={{ width: '300px' }}\n                      >\n                        {calList.map(cal => (\n                          <MenuItem key={cal.id} value={cal.id}>\n                            {cal.summary}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  )}\n                </RadioGroup>\n              </FormControl>\n            </div>\n\n            <div className={classes.buttonContainer}>\n              <Button onClick={authorizeGcal}>\n                <TodayIcon className={classes.extendedIcon} />\n                Authorize GCal\n              </Button>\n              <Button color=\"primary\" onClick={handleSubmit} disabled={!signedIn}>\n                <SendIcon className={classes.extendedIcon} />\n                Send to GCal\n              </Button>\n            </div>\n          </div>\n\n          <Divider />\n          {props.children}\n\n          <div className={classes.actionSection}>\n            <Typography variant=\"h6\" component=\"h6\">\n              Export to Another Calendar\n            </Typography>\n            <p className={classes.infoText}>\n              You can also export your classes to another calendar by clicking the export button.\n              This will download a file that you can import to any other calendar service.\n            </p>\n            <div className={classes.buttonContainer}>\n              <Button color=\"primary\" onClick={exportCalendar}>\n                <GetAppIcon className={classes.extendedIcon} />\n                Download\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n}\n\nEventsActions.propTypes = {\n  sendToGcal: PropTypes.func.isRequired,\n  authorizeGcal: PropTypes.func.isRequired,\n  gcalClient: PropTypes.object.isRequired,\n  exportCalendar: PropTypes.func.isRequired,\n  openToast: PropTypes.func.isRequired,\n  signedIn: PropTypes.bool.isRequired\n};\n\nexport default EventsActions;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport UMNClass from './UMNClass';\nimport {\n  Container,\n  Typography,\n  CircularProgress,\n  fade,\n  Card,\n  CardContent,\n  makeStyles,\n  Fab\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport GCalClient from '../api/GCalClient';\nimport axios from 'axios';\nimport EventsActions from './EventsActions';\nimport { Redirect } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  classesPage: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'center',\n    overflow: 'auto'\n  },\n  loadingOverlay: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 9999,\n    width: '100%',\n    height: '100%',\n    borderRadius: '4px',\n    backgroundColor: fade(theme.palette.grey[900], 0.4)\n  },\n  content: {\n    height: 'max-content',\n    marginTop: '10vh',\n    marginBottom: '10vh'\n  },\n  classesContainer: {\n    display: 'flex'\n  },\n  classList: {\n    textAlign: 'center',\n    flex: 3\n  },\n  actionCol: {\n    flex: 2,\n    position: 'relative',\n    marginLeft: theme.spacing(1)\n  },\n  header: {\n    color: theme.palette.grey[50],\n    marginBottom: theme.spacing(2)\n  },\n  classesInfo: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    textAlign: 'left'\n  },\n  fabButton: {\n    position: 'relative',\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: '0 auto'\n  }\n}));\n\n// Create the gcal client outside of the function so it persists\nconst gcalClient = new GCalClient();\n\nfunction ClassesPage(props) {\n  const classes = useStyles();\n  const [signedIn, setSignedIn] = useState(gcalClient.signedIn);\n  const [eventsStatus, setEventsStatus] = useState('unbegun');\n\n  // Set the gcal client to set the signed in status once finished\n  gcalClient.onLoadCallback = status => {\n    setSignedIn(status);\n  };\n\n  // Redirect to homepage if there are no classes\n  if (props.extractedClasses.length === 0) {\n    return <Redirect to=\"/\" />;\n  }\n\n  /**\n   * Authorizes the user with Google Calendar through the api\n   */\n  const authorizeGcal = () => {\n    gcalClient.handleAuthClick();\n  };\n\n  /**\n   * Sends the classes back to the server to serialize into events.\n   * Then takes these events and adds them to the calendar.\n   */\n  const createEvents = () => {\n    // Ensure there is a calendar to add to\n    if (!gcalClient.calendar) {\n      props.openToast('A calendar must be selected', 'error');\n    }\n\n    // Make the requrest to server for the events\n    let events = [];\n    let eventCounter = 0;\n    axios\n      .post(`${process.env.REACT_APP_API_ENDPOINT}/api/events`, props.extractedClasses)\n      .then(res => {\n        events = res.data;\n        // Add each event to the calendar on the gcalClient\n        events.forEach(event => {\n          gcalClient\n            .createEvent(event)\n            .then(res => {\n              eventCounter++;\n              // Check to see if the last event has been created\n              if (eventCounter === events.length) {\n                setEventsStatus('created');\n                props.openToast('Successfully create events! Check your gcal', 'success');\n              }\n            })\n            .catch(error => {\n              props.openToast('Could not create event ' + event.summary, 'error');\n              console.error(error);\n            });\n        });\n      })\n      .catch(error => {\n        props.openToast(error.message, 'error');\n        setEventsStatus('error');\n        console.error(error);\n      });\n  };\n\n  /**\n   * Either creates a new calendar or sets one on the client.\n   * Returns a promise for the next steps.\n   */\n  const setCalendar = (calOption, name, calendar) => {\n    if (calOption === 'new') {\n      // Create a new calendar with the api\n      if (!name) {\n        return new Promise((resolve, reject) => reject());\n      }\n      return gcalClient.createCalendar(name);\n    } else if (calOption === 'existing') {\n      // Set the calendar\n      if (!calendar) {\n        return new Promise((resolve, reject) => reject());\n      }\n      return new Promise((resolve, reject) => {\n        gcalClient.setCalendar(calendar);\n        resolve();\n      });\n    }\n  };\n\n  /**\n   * Sends the updates events back to the server. Then creates a\n   * new calendar on gcal (or selects an existing one) and adds\n   * the events to there. Will not work if the user has not authorized\n   * Gcal.\n   */\n  const sendToGcal = (calOption, newCalendarName, existingCalendar) => {\n    setEventsStatus('creating');\n    setCalendar(calOption, newCalendarName, existingCalendar)\n      .then(() => {\n        // Add the events to the calendar once successful\n        createEvents();\n      })\n      .catch(error => {\n        props.openToast('Could not create or add to calendar.', 'error');\n      });\n  };\n\n  /**\n   * Sends the updated events back to the server, which converts them\n   * to icalendar events. This function then creates a download.\n   */\n  const exportCalendar = () => {\n    axios\n      .post(`${process.env.REACT_APP_API_ENDPOINT}/api/ics`, props.extractedClasses)\n      .then(res => {\n        const icsString = res.data.ics;\n        // Create an invisible link element to download the file\n        var element = document.createElement('a');\n        element.setAttribute(\n          'href',\n          'data:text/calendar;charset=utf-8,' + encodeURIComponent(icsString)\n        );\n        element.setAttribute('download', 'class-calendar.ics');\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n      })\n      .catch(error => {\n        props.openToast('Could create ics file. Please try again.', 'error');\n        console.error(error);\n      });\n  };\n\n  return (\n    <div className={classes.classesPage}>\n      <Container className={classes.content}>\n        <Container className={classes.header}>\n          <Typography variant=\"h2\" align=\"center\" component=\"h1\" color=\"inherit\">\n            Review Classes\n          </Typography>\n        </Container>\n        <Container className={classes.classesContainer}>\n          <div className={classes.classList}>\n            <Card className={classes.classesInfo}>\n              <CardContent style={{ paddingBottom: '16px' }}>\n                The classes extracted from your screenshot are below. Review and edit the info for\n                each class by clicking on it and changing anything that's incorrect.\n              </CardContent>\n            </Card>\n            {props.extractedClasses.map(cls => (\n              <UMNClass\n                key={cls.id}\n                cls={cls}\n                handleClassChange={props.handleClassChange}\n                handleClassDelete={props.handleClassDelete}\n              />\n            ))}\n            <Fab color=\"primary\" className={classes.fabButton} onClick={props.handleClassAdd}>\n              <AddIcon />\n            </Fab>\n          </div>\n          <div className={classes.actionCol}>\n            <EventsActions\n              sendToGcal={sendToGcal}\n              authorizeGcal={authorizeGcal}\n              gcalClient={gcalClient}\n              exportCalendar={exportCalendar}\n              signedIn={signedIn}\n              openToast={props.openToast}\n            >\n              {eventsStatus === 'creating' && (\n                <div className={classes.loadingOverlay}>\n                  <CircularProgress />\n                </div>\n              )}\n            </EventsActions>\n          </div>\n        </Container>\n      </Container>\n    </div>\n  );\n}\n\nClassesPage.propTypes = {\n  extractedClasses: PropTypes.array.isRequired,\n  handleClassChange: PropTypes.func.isRequired,\n  handleClassAdd: PropTypes.func.isRequired,\n  handleClassDelete: PropTypes.func.isRequired,\n  openToast: PropTypes.func.isRequired\n};\n\nexport default ClassesPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Dialog,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  DialogContent,\n  Typography,\n  DialogActions,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    maxWidth: '960px',\n    width: '100%'\n  }\n}));\n\nfunction InstructionDialog(props) {\n  const classes = useStyles();\n  const { open, onClose } = props;\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\">\n      <DialogTitle id=\"simple-dialog-title\">How To</DialogTitle>\n      <DialogContent className={classes.content}>\n        <List component=\"nav\" dense>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>1.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              Go to myu.umn.edu, click on academics, and go to the 'My Classes' tab.\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>2.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              Click to a week where all the classes appear. (If the first week doesn't have classes\n              on Monday for instance, go to the second week so the Monday classes can be seen.)\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>3.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              Take a screenshot of the entire schedule and save it locally. Make sure the days of\n              the week at the top of each column are in the screenshot.\n            </ListItemText>\n          </ListItem>\n          <ListItem style={{ display: 'text', justifyContent: 'center' }}>\n            <img src=\"example-calendar.png\" height=\"400\" alt=\"Example Calendar\" />\n          </ListItem>\n\n          <ListItem>\n            <ListItemIcon>\n              <Typography>4.</Typography>\n            </ListItemIcon>\n            <ListItemText>Upload the image here and wait for the classes to be read.</ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>5.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              After the classes have been loaded, correct any data that is wrong by clicking the\n              class and directly editing it.\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>6.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              Authorize the app to use your Google Calendar, and set your calendar creation options.\n              Then submit and voilà.\n            </ListItemText>\n          </ListItem>\n        </List>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nInstructionDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nexport default InstructionDialog;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core';\n\nimport Navbar from './components/Navbar';\nimport HomePage from './components/HomePage';\nimport UploadPage from './components/UploadPage';\nimport Toast from './components/Toast';\nimport ClassesPage from './components/ClassesPage';\nimport InstructionDialog from './components/InstructionDialog';\n\nconst appTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#913447',\n      main: '#760219',\n      dark: '#520111',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#FFDF7E',\n      main: '#FFD75E',\n      dark: '#b29641',\n      contrastText: '#000'\n    }\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  background: {\n    display: 'flex',\n    height: '100vh',\n    width: '100vw',\n    background: 'url(\"gopher.jpg\") no-repeat center center fixed',\n    backgroundSize: 'cover'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  // Attempt to get the local classes on init\n  const [extractedClasses, setExtractedClasses] = useState(\n    JSON.parse(localStorage.getItem('extractedClasses')) || []\n  );\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastVariant, setToastVariant] = useState('error');\n  const [instructionsOpen, setInstructionsOpen] = useState(false);\n\n  useEffect(() => {\n    // Set the extracted classes locally on any change\n    localStorage.setItem('extractedClasses', JSON.stringify(extractedClasses));\n  }, [extractedClasses]);\n\n  /**\n   * Function to be passed to the upload component to set the classes on the app\n   */\n  const handleExtractedClasses = data => {\n    setExtractedClasses(data);\n  };\n\n  /**\n   * Passed to the UMNClass component to handle the editing of classes. Simply\n   * replaces the class in the extracted classes array with the argument class\n   */\n  const handleClassChange = cls => {\n    const i = extractedClasses.indexOf(cls);\n    extractedClasses.splice(i, 1, cls);\n    setExtractedClasses([...extractedClasses]);\n  };\n\n  /**\n   * Adds a new empty class to the list of extracted classes\n   */\n  const handleClassAdd = () => {\n    const newClass = {\n      name: '',\n      dept: '',\n      course_num: '',\n      section: '',\n      location: '',\n      start_time: '',\n      end_time: '',\n      start_date: '',\n      end_date: '',\n      days_of_week: '',\n      id: extractedClasses.length + 1\n    };\n    setExtractedClasses([...extractedClasses, newClass]);\n  };\n\n  /**\n   * Deletes a class from the extractedClasses array\n   * @param {object} cls - class object to delete\n   */\n  const handleClassDelete = cls => {\n    const i = extractedClasses.indexOf(cls);\n    extractedClasses.splice(i, 1);\n    setExtractedClasses([...extractedClasses]);\n    handleToastOpen('Class deleted', 'success');\n  };\n\n  /**\n   * Closes the toast message\n   */\n  const handleToastClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setToastOpen(false);\n  };\n\n  /**\n   * Opens the toast with a message and a color variant\n   * @param {string} - message\n   * @param {string} - variant (one of sucess, info, warning, or error)\n   */\n  const handleToastOpen = (message, variant) => {\n    setToastOpen(true);\n    setToastMessage(message);\n    setToastVariant(variant);\n  };\n\n  /**\n   * Simply opens the instructions modal\n   */\n  const handleInstructionsOpen = () => {\n    setInstructionsOpen(true);\n  };\n\n  /**\n   * Simply closes the instructions modal\n   */\n  const handleInstructionsClose = () => {\n    setInstructionsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ThemeProvider theme={appTheme}>\n        <div className={classes.background}>\n          <Router>\n            <Navbar openInstructions={handleInstructionsOpen}></Navbar>\n            <Route exact path=\"/\">\n              <HomePage openInstructions={handleInstructionsOpen} />\n            </Route>\n            <Route exact path=\"/upload\">\n              <UploadPage openToast={handleToastOpen} handleClasses={handleExtractedClasses} />\n            </Route>\n            <Route exact path=\"/classes\">\n              <ClassesPage\n                extractedClasses={extractedClasses}\n                handleClassChange={handleClassChange}\n                handleClassAdd={handleClassAdd}\n                handleClassDelete={handleClassDelete}\n                openToast={handleToastOpen}\n              />\n            </Route>\n          </Router>\n          <InstructionDialog open={instructionsOpen} onClose={handleInstructionsClose} />\n          <Toast\n            open={toastOpen}\n            handleClose={handleToastClose}\n            message={toastMessage}\n            variant={toastVariant}\n          />\n        </div>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}