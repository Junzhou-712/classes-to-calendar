{"version":3,"sources":["components/Navbar.js","components/HomePage.js","components/DragAndDrop.js","components/UploadPage.js","components/Toast.js","components/UMNClass.js","api/GCalClient.js","components/EventsActions.js","components/ClassesPage.js","components/SuccessPage.js","components/InstructionDialog.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","titleWrapper","flexGrow","title","cursor","navButton","marginLeft","spacing","Navbar","props","classes","history","useHistory","openInstructions","AppBar","position","Toolbar","Typography","variant","className","onClick","push","Button","color","component","Link","to","homeContent","padding","display","alignItems","width","homeButtons","marginTop","card","HomePage","Fragment","Container","maxWidth","Card","CardContent","align","gutterBottom","paragraph","Grid","container","justify","item","styles","cardStyle","dropzoneArea","border","minHeight","uploadInfo","flexDirection","justifyContent","previewImage","maxHeight","input","buttonContainer","DragAndDrop","state","dragging","userHasSelectedImage","dragCounter","dropRef","React","createRef","handleDrag","e","preventDefault","stopPropagation","handleDragIn","dataTransfer","items","length","setState","handleDragOut","handleDrop","files","handleImageSelect","clearData","target","div","this","current","addEventListener","removeEventListener","upload","style","fontSize","drop","imagePreview","selectedImageLoaded","src","selectedImageSrc","alt","CircularProgress","variante","ref","CardActions","accept","id","type","onChange","htmlFor","disabled","handleUpload","Component","uploadContent","uploadContainer","loadingOverlay","top","left","zIndex","height","borderRadius","backgroundColor","fade","palette","grey","header","marginBottom","pageContent","UploadPage","useState","selectedImage","setSelectedImage","setSelectedImageSrc","setSelectedImageLoaded","uploadStatus","setUploadStatus","image","reader","FileReader","readAsDataURL","onloadend","result","url","process","formData","FormData","append","axios","post","headers","then","res","openToast","handleClasses","data","catch","error","console","message","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","green","dark","primary","main","amber","icon","iconVariant","opacity","marginRight","Toast","handleClose","open","Icon","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","SnackbarContent","aria-describedby","action","IconButton","key","aria-label","heading","typography","pxToRem","fontWeight","fontWeightRegular","inputField","UMNClass","cls","handleClassChange","name","setTitle","handleChanges","value","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Object","keys","map","i","FormControl","InputLabel","replace","txt","charAt","toUpperCase","substr","toLowerCase","Input","defaultValue","GCalClient","signedIn","gapi","onLoadCallback","calendar","initClient","bind","handleClientLoad","handleAuthClick","updateSigninStatus","get","window","getConfig","config","client","init","auth2","getAuthInstance","isSignedIn","listen","script","document","createElement","body","appendChild","onload","load","signIn","log","calendarList","list","summary","timeZone","calendars","insert","event","events","calendarId","resource","optionsForm","paddingLeft","paddingRight","formField","extendedIcon","infoText","EventsActions","sendToGcal","authorizeGcal","gcalClient","calOption","setCalOption","calList","setCalList","calId","setCalId","newCalName","setNewCalName","RadioGroup","listCalendars","FormControlLabel","control","Radio","label","TextField","Select","cal","MenuItem","filter","children","classesPage","overflow","content","classesContainer","classList","flex","actionCol","ClassesPage","setSignedIn","eventsStatus","setEventsStatus","useEffect","status","extractedClasses","newCalendarName","existingCalendar","createCalendar","Promise","resolve","reject","setCalendar","eventCounter","forEach","createEvent","createEvents","successCard","successContent","successIcon","successText","SuccessPage","InstructionDialog","Dialog","DialogTitle","DialogContent","List","dense","ListItem","ListItemIcon","ListItemText","DialogActions","appTheme","createMuiTheme","light","contrastText","secondary","background","backgroundSize","App","setExtractedClasses","toastOpen","setToastOpen","toastMessage","setToastMessage","toastVariant","setToastVariant","instructionsOpen","setInstructionsOpen","handleToastOpen","handleInstructionsOpen","CssBaseline","ThemeProvider","exact","path","rest","indexOf","splice","reason","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f78a524.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  titleWrapper: {\n    flexGrow: 1\n  },\n  title: {\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  navButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction Navbar(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const { openInstructions } = props;\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar>\n        <Typography variant=\"h5\" className={classes.titleWrapper}>\n          <span onClick={() => history.push('/')} className={classes.title}>\n            Classes to Calendar\n          </span>\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          color=\"inherit\"\n          className={classes.navButton}\n          onClick={openInstructions}\n        >\n          Instructions\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"inherit\"\n          className={classes.navButton}\n          component={Link}\n          to=\"/upload\"\n          onClick={openInstructions}\n        >\n          Upload\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nNavbar.propTypes = {\n  openInstructions: PropTypes.func.isRequired\n};\n\nexport default Navbar;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  homeContent: {\n    padding: theme.spacing(8, 0, 6),\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%'\n  },\n  homeButtons: {\n    marginTop: theme.spacing(4)\n  },\n  card: {\n    padding: '50px'\n  }\n}));\n\nexport default function HomePage(props) {\n  const classes = useStyles();\n  const { openInstructions } = props;\n\n  return (\n    <React.Fragment>\n      <div className={classes.homeContent}>\n        <Container maxWidth=\"md\">\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Classes to Calendar\n              </Typography>\n              <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                An online app that takes an screenshot of your class schedule and enters it in\n                Google Calendar.\n              </Typography>\n              <div className={classes.homeButtons}>\n                <Grid container spacing={2} justify=\"center\">\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      component={Link}\n                      to=\"/upload\"\n                      onClick={openInstructions}\n                    >\n                      Upload class schedule image\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n            </CardContent>\n          </Card>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport { Card, CardContent, Button, CardActions, Typography } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloudUploadOutlinedIcon from '@material-ui/icons/CloudUploadOutlined';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\n\nconst styles = {\n  cardStyle: {\n    padding: '20px'\n  },\n  dropzoneArea: {\n    display: 'flex',\n    position: 'relative',\n    border: '2px dashed #ccc',\n    width: '100%',\n    minHeight: '400px',\n    padding: '20px'\n  },\n  uploadInfo: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  previewImage: {\n    maxHeight: '400px'\n  },\n  input: {\n    display: 'none'\n  },\n  buttonContainer: {\n    justifyContent: 'center'\n  }\n};\n\nexport class DragAndDrop extends Component {\n  state = {\n    dragging: false,\n    userHasSelectedImage: false\n  };\n  dragCounter = 0;\n  dropRef = React.createRef();\n\n  handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  handleDragIn = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    // Increment a drag counter to handle children dragin events\n    this.dragCounter++;\n    // Check to ensure there are files\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      this.setState({ dragging: true });\n    }\n  };\n\n  handleDragOut = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    // Decrement the dragcounter for child events and\n    // set the the state to false if the counter is zero\n    this.dragCounter--;\n    if (this.dragCounter > 0) return;\n    this.setState({ dragging: false });\n  };\n\n  /**\n   * Handles the selection of an image by drag and drop\n   */\n  handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.setState({ dragging: false });\n    // Check to ensure there are files being dragged\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      this.setState({ userHasSelectedImage: true });\n      // Pass the image to the parent\n      this.props.handleImageSelect(e.dataTransfer.files[0]);\n      e.dataTransfer.clearData();\n      this.dragCounter = 0;\n    }\n  };\n\n  /**\n   * Handles the selecting of an image using the input\n   */\n  handleImageSelect = e => {\n    this.setState({ dragging: false });\n    if (e.target.files && e.target.files.length > 0) {\n      this.setState({ userHasSelectedImage: true });\n      // Pass the image to the parent\n      this.props.handleImageSelect(e.target.files[0]);\n      this.dragCounter = 0;\n    }\n  };\n\n  componentDidMount() {\n    let div = this.dropRef.current;\n    this.dragCounter = 0;\n    div.addEventListener('dragenter', this.handleDragIn);\n    div.addEventListener('dragleave', this.handleDragOut);\n    div.addEventListener('dragover', this.handleDrag);\n    div.addEventListener('drop', this.handleDrop);\n  }\n\n  componentWillUnmount() {\n    let div = this.dropRef.current;\n    div.removeEventListener('dragenter', this.handleDragIn);\n    div.removeEventListener('dragleave', this.handleDragOut);\n    div.removeEventListener('dragover', this.handleDrag);\n    div.removeEventListener('drop', this.handleDrop);\n  }\n\n  render() {\n    const upload = (\n      <React.Fragment>\n        <CloudUploadOutlinedIcon style={{ fontSize: 80 }} color=\"action\"></CloudUploadOutlinedIcon>\n        <Typography component=\"h4\" variant=\"h4\" color=\"textSecondary\">\n          Drag and drop screenshot here\n        </Typography>\n      </React.Fragment>\n    );\n\n    const drop = (\n      <React.Fragment>\n        <AddPhotoAlternateIcon style={{ fontSize: 80 }} color=\"action\"></AddPhotoAlternateIcon>\n        <Typography component=\"h4\" variant=\"h4\" color=\"textSecondary\">\n          Add image\n        </Typography>\n      </React.Fragment>\n    );\n\n    const imagePreview = (\n      <React.Fragment>\n        {this.props.selectedImageLoaded ? (\n          <img style={styles.previewImage} src={this.props.selectedImageSrc} alt=\"Uploaded\" />\n        ) : (\n          <CircularProgress />\n        )}\n      </React.Fragment>\n    );\n\n    return (\n      <Card variante=\"outlined\" style={styles.cardStyle}>\n        <CardContent>\n          <div ref={this.dropRef} style={styles.dropzoneArea}>\n            <div style={styles.uploadInfo}>\n              {!this.state.userHasSelectedImage\n                ? !this.state.dragging\n                  ? upload\n                  : drop\n                : imagePreview}\n            </div>\n          </div>\n        </CardContent>\n        <CardActions style={styles.buttonContainer}>\n          <input\n            accept=\"image/*\"\n            style={styles.input}\n            id=\"image-upload\"\n            type=\"file\"\n            onChange={this.handleImageSelect}\n          />\n          <label htmlFor=\"image-upload\">\n            <Button variant=\"contained\" color=\"primary\" component=\"span\">\n              Browse\n            </Button>\n          </label>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!this.props.selectedImageSrc}\n            onClick={this.props.handleUpload}\n          >\n            Upload\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nexport default DragAndDrop;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport DragAndDrop from './DragAndDrop';\nimport { Container, makeStyles, CircularProgress, Typography, fade } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  uploadContent: {\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  uploadContainer: {\n    position: 'relative',\n    padding: 0\n  },\n  loadingOverlay: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 9999,\n    width: '100%',\n    height: '100%',\n    borderRadius: '4px',\n    backgroundColor: fade(theme.palette.grey[900], 0.4)\n  },\n  header: {\n    color: theme.palette.grey[50],\n    marginBottom: theme.spacing(2)\n  },\n  pageContent: {\n    marginTop: '15vh'\n  }\n}));\n\nfunction UploadPage(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [selectedImageSrc, setSelectedImageSrc] = useState('');\n  const [selectedImageLoaded, setSelectedImageLoaded] = useState(false);\n  const [uploadStatus, setUploadStatus] = useState('');\n\n  /**\n   * Handles the selecting of an image\n   */\n  const handleImageSelect = image => {\n    setSelectedImage(image);\n    previewImage(image);\n  };\n\n  /**\n   * Uses the image on the props to preview the image in the uploader by setting the selectedImageSrc\n   */\n  const previewImage = image => {\n    let reader = new FileReader();\n    reader.readAsDataURL(image);\n    reader.onloadend = () => {\n      setSelectedImageSrc(reader.result);\n      setSelectedImageLoaded(true);\n    };\n  };\n\n  /**\n   * Uploades the image to the api endpoint\n   */\n  const handleUpload = () => {\n    let url = `${process.env.REACT_APP_API_ENDPOINT}/api/upload`;\n\n    // Added the file to the form data for submission\n    let formData = new FormData();\n    formData.append('file', selectedImage);\n\n    // Make the post request with the image\n    setUploadStatus('uploading');\n    axios\n      .post(url, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      })\n      .then(res => {\n        props.openToast('Classes extracted', 'success');\n        setUploadStatus('uploaded');\n        props.handleClasses(res.data);\n        history.push('/classes');\n      })\n      .catch(error => {\n        console.error('Error with image upload', error);\n        props.openToast(error.message, 'error');\n        setUploadStatus('uploaded');\n      });\n  };\n\n  return (\n    <div className={classes.uploadContent}>\n      <Container className={classes.pageContent}>\n        <Container className={classes.header}>\n          <Typography variant=\"h2\" align=\"center\" component=\"h1\" color=\"inherit\">\n            Upload Schedule\n          </Typography>\n        </Container>\n        <Container maxWidth=\"sm\" className={classes.uploadContainer}>\n          <DragAndDrop\n            handleImageSelect={handleImageSelect}\n            handleUpload={handleUpload}\n            selectedImageLoaded={selectedImageLoaded}\n            selectedImageSrc={selectedImageSrc}\n          ></DragAndDrop>\n          {uploadStatus === 'uploading' && (\n            <div className={classes.loadingOverlay}>\n              <CircularProgress />\n            </div>\n          )}\n        </Container>\n      </Container>\n    </div>\n  );\n}\n\nUploadPage.propTypes = {\n  openToast: PropTypes.func.isRequired,\n  handleClasses: PropTypes.func.isRequired\n};\n\nexport default UploadPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport { green, amber } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nfunction Toast(props) {\n  const classes = useStyles();\n  const { message, handleClose, variant, open } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      open={open}\n      onClose={handleClose}\n      autoHideDuration={5000}\n    >\n      <SnackbarContent\n        className={classes[variant]}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={classes.icon + ' ' + classes.iconVariant} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>\n        ]}\n      />\n    </Snackbar>\n  );\n}\n\nToast.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\n};\n\nexport default Toast;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  inputField: {\n    marginBottom: theme.spacing(1)\n  },\n  info: {\n    flexDirection: 'column'\n  }\n}));\n\nfunction UMNClass(props) {\n  const classes = useStyles();\n  const { cls, handleClassChange } = props;\n  const [title, setTitle] = useState(cls.name);\n\n  /**\n   * Converts a string in snake case to title case. Used for converting the props on\n   * the class to labels.\n   */\n  const snakeToTitleCase = str => {\n    str = str.replace(/_/g, ' ');\n    str = str.replace(/\\w\\S*/g, txt => {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n    return str;\n  };\n\n  /**\n   * Handles input changes on the class by taking the name on the input and using\n   * it as a prop on the class to change it to the input value. Must manually set the name\n   * to the title because it only updates with the state.\n   */\n  const handleChanges = e => {\n    cls[e.target.name] = e.target.value;\n    handleClassChange(cls);\n    // Set the title to the name if changed\n    if (e.target.name === 'name') {\n      setTitle(cls.name);\n    }\n  };\n\n  return (\n    <ExpansionPanel key={cls.id}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\">\n        <Typography className={classes.heading}>{title}</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails className={classes.info}>\n        {Object.keys(cls).map(\n          (name, i) =>\n            name !== 'id' && (\n              <FormControl key={i} className={classes.inputField}>\n                <InputLabel>{snakeToTitleCase(name)}</InputLabel>\n                <Input name={name} defaultValue={cls[name]} onChange={handleChanges} />\n              </FormControl>\n            )\n        )}\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}\n\nUMNClass.propTypes = {\n  cls: PropTypes.object.isRequired,\n  handleClassChange: PropTypes.func.isRequired\n};\n\nexport default UMNClass;\n","import axios from 'axios';\n\nclass GCalClient {\n  signedIn = false;\n  gapi = null;\n  onLoadCallback = null;\n  calendar = null;\n\n  constructor() {\n    this.initClient = this.initClient.bind(this);\n    this.handleClientLoad = this.handleClientLoad.bind(this);\n    this.handleAuthClick = this.handleAuthClick.bind(this);\n    this.updateSigninStatus = this.updateSigninStatus.bind(this);\n    this.handleClientLoad();\n  }\n\n  async getConfig() {\n    return await axios.get(`${process.env.REACT_APP_API_ENDPOINT}/api/google-config`);\n  }\n\n  async initClient() {\n    this.gapi = window['gapi'];\n    const config = await this.getConfig();\n    this.gapi.client\n      .init(config.data)\n      .then(() => {\n        // Listen for sign-in state changes.\n        this.gapi.auth2.getAuthInstance().isSignedIn.listen(this.updateSigninStatus);\n        // Handle the initial sign-in state.\n        this.updateSigninStatus(this.gapi.auth2.getAuthInstance().isSignedIn.get());\n        if (this.onLoadCallback) {\n          this.onLoadCallback(this.signedIn);\n        }\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  }\n\n  handleClientLoad() {\n    this.gapi = window['gapi'];\n    var script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/api.js';\n    document.body.appendChild(script);\n    script.onload = () => {\n      window['gapi'].load('client:auth2', this.initClient);\n    };\n  }\n\n  handleAuthClick() {\n    if (this.gapi) {\n      this.gapi.auth2.getAuthInstance().signIn();\n    } else {\n      console.log('Error: this.gapi not loaded');\n    }\n  }\n\n  updateSigninStatus(isSignedIn) {\n    this.signedIn = isSignedIn;\n  }\n\n  listCalendars() {\n    return this.gapi.client.calendar.calendarList.list();\n  }\n\n  createCalendar(name) {\n    const calendar = {\n      summary: name,\n      timeZone: 'America/Chicago'\n    };\n    return this.gapi.client.calendar.calendars.insert(calendar).then(res => {\n      this.calendar = res.result;\n      console.log(res);\n    });\n  }\n\n  createEvent(event) {\n    return this.gapi.client.calendar.events.insert({\n      calendarId: this.calendar.id,\n      resource: event\n    });\n  }\n\n  setCalendar(calendar) {\n    this.calendar = calendar;\n  }\n}\n\nexport default GCalClient;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Button,\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography\n} from '@material-ui/core';\nimport TodayIcon from '@material-ui/icons/Today';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    position: 'relative'\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  optionsForm: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  formField: {\n    marginLeft: theme.spacing(4),\n    marginBottom: theme.spacing(2)\n  },\n  extendedIcon: {\n    marginRight: '4px'\n  },\n  infoText: {\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction EventsActions(props) {\n  const classes = useStyles();\n  const { sendToGcal, authorizeGcal, gcalClient, signedIn } = props;\n  const [calOption, setCalOption] = useState('new');\n  const [calList, setCalList] = useState([]);\n  const [calId, setCalId] = useState('');\n  const [newCalName, setNewCalName] = useState('Class Schedule');\n\n  /**\n   * Handles the switching of new and existing calendars.\n   * If wanting to add to an existing calendar, on the first time\n   * the option is selected, this will get the list of calendars\n   * for the user\n   */\n  const handleOptionChange = e => {\n    setCalOption(e.target.value);\n    if (e.target.value === 'existing' && calList.length === 0) {\n      gcalClient\n        .listCalendars()\n        .then(res => {\n          setCalList(res.result.items);\n        })\n        .catch(error => {\n          props.openToast(error.message, 'error');\n          console.error(error);\n        });\n    }\n  };\n\n  /**\n   * Sets the options for the calendar and calls the sendToGcal\n   * method with the options.\n   */\n  const handleSubmit = e => {\n    if (calOption === 'new') {\n      if (!newCalName) {\n        props.openToast('Must specify a name for the new calendar', 'error');\n      } else {\n        sendToGcal(calOption, newCalName, null);\n      }\n    } else if (calOption === 'existing') {\n      if (!calId) {\n        props.openToast('Must select a calendar', 'error');\n      } else {\n        const calendar = calList.filter(cal => cal.id === calId)[0];\n        sendToGcal(calOption, null, calendar);\n      }\n    }\n  };\n\n  const handleCalIdChange = e => {\n    setCalId(e.target.value);\n  };\n\n  const handleNewCalChange = e => {\n    setNewCalName(e.target.value);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography align=\"left\" color=\"textPrimary\" className={classes.infoText}>\n          Here are the extracted classes. Review each class's info, and edit it if any of it's\n          wrong. Click the button below to make the calendar. You must authorize the app to use your\n          google calendar before sending.\n        </Typography>\n\n        <div className={classes.optionsForm}>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              aria-label=\"calendarOption\"\n              name=\"calendarOption\"\n              defaultValue={calOption}\n              onChange={handleOptionChange}\n            >\n              <FormControlLabel\n                value=\"new\"\n                control={<Radio />}\n                label=\"Make a new calendar\"\n                disabled={!signedIn}\n              />\n              {calOption === 'new' && (\n                <TextField\n                  className={classes.formField}\n                  label=\"New calendar name\"\n                  variant=\"filled\"\n                  onChange={handleNewCalChange}\n                  defaultValue={newCalName}\n                  disabled={!signedIn}\n                />\n              )}\n              <FormControlLabel\n                value=\"existing\"\n                control={<Radio />}\n                label=\"Add to existing calendar\"\n                disabled={!signedIn}\n              />\n              {calOption === 'existing' && (\n                <FormControl className={classes.formField}>\n                  <InputLabel>Select from calendars...</InputLabel>\n                  <Select label=\"existing-calendar\" defaultValue=\"\" onChange={handleCalIdChange}>\n                    {calList.map(cal => (\n                      <MenuItem key={cal.id} value={cal.id}>\n                        {cal.summary}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              )}\n            </RadioGroup>\n          </FormControl>\n        </div>\n\n        <div className={classes.buttonContainer}>\n          <Button onClick={authorizeGcal}>\n            <TodayIcon className={classes.extendedIcon} />\n            Authorize GCal\n          </Button>\n          <Button color=\"primary\" onClick={handleSubmit} disabled={!signedIn}>\n            <SendIcon className={classes.extendedIcon} />\n            Send to GCal\n          </Button>\n        </div>\n      </CardContent>\n      {props.children}\n    </Card>\n  );\n}\n\nEventsActions.propTypes = {\n  sendToGcal: PropTypes.func.isRequired,\n  authorizeGcal: PropTypes.func.isRequired,\n  gcalClient: PropTypes.object.isRequired,\n  openToast: PropTypes.func.isRequired,\n  signedIn: PropTypes.bool.isRequired\n};\n\nexport default EventsActions;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport UMNClass from './UMNClass';\nimport { makeStyles, Container, Typography, CircularProgress, fade } from '@material-ui/core';\n\nimport GCalClient from '../api/GCalClient';\nimport axios from 'axios';\nimport EventsActions from './EventsActions';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  classesPage: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'center',\n    overflow: 'auto'\n  },\n  loadingOverlay: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 9999,\n    width: '100%',\n    height: '100%',\n    borderRadius: '4px',\n    backgroundColor: fade(theme.palette.grey[900], 0.4)\n  },\n  content: {\n    marginTop: '15vh'\n  },\n  classesContainer: {\n    display: 'flex'\n  },\n  classList: {\n    flex: 3\n  },\n  actionCol: {\n    flex: 2,\n    position: 'relative',\n    marginLeft: theme.spacing(1)\n  },\n  header: {\n    color: theme.palette.grey[50],\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst gcalClient = new GCalClient();\n\nfunction ClassesPage(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [signedIn, setSignedIn] = useState(gcalClient.signedIn);\n  const [eventsStatus, setEventsStatus] = useState('unbegun');\n\n  useEffect(() => {\n    // Set the gcal client to set the signed in status once finished\n    gcalClient.onLoadCallback = status => {\n      setSignedIn(status);\n    };\n  }, []);\n\n  /**\n   * Authorizes the user with Google Calendar through the api\n   */\n  const authorizeGcal = () => {\n    gcalClient.handleAuthClick();\n  };\n\n  /**\n   * Sends the classes back to the server to serialize into events.\n   * Then takes these events and adds them to the calendar.\n   */\n  const createEvents = () => {\n    // Ensure there is a calendar to add to\n    if (!gcalClient.calendar) {\n      props.openToast('A calendar must be selected', 'error');\n    }\n\n    // Make the requrest to server for the events\n    let events = [];\n    let eventCounter = 0;\n    axios\n      .post(`${process.env.REACT_APP_API_ENDPOINT}/api/events`, props.extractedClasses)\n      .then(res => {\n        events = res.data;\n        // Add each event to the calendar on the gcalClient\n        events.forEach(event => {\n          gcalClient\n            .createEvent(event)\n            .then(res => {\n              console.log(res.result);\n              eventCounter++;\n              // Check to see if the last event has been created\n              if (eventCounter === events.length) {\n                setEventsStatus('created');\n                history.push('/success');\n              }\n            })\n            .catch(error => {\n              props.openToast('Could not create event ' + event.summary, 'error');\n              console.error(error);\n            });\n        });\n      })\n      .catch(error => {\n        props.openToast(error.message, 'error');\n        console.error(error);\n      });\n  };\n\n  /**\n   * Either creates a new calendar or sets one on the client.\n   * Returns a promise for the next steps.\n   */\n  const setCalendar = (calOption, name, calendar) => {\n    if (calOption === 'new') {\n      // Create a new calendar with the api\n      if (!name) {\n        return new Promise((resolve, reject) => reject());\n      }\n      return gcalClient.createCalendar(name);\n    } else if (calOption === 'existing') {\n      // Set the calendar\n      if (!calendar) {\n        return new Promise((resolve, reject) => reject());\n      }\n      return new Promise((resolve, reject) => {\n        gcalClient.setCalendar(calendar);\n        resolve();\n      });\n    }\n  };\n\n  /**\n   * Sends the updates events back to the server. Then creates a\n   * new calendar on gcal (or selects an existing one) and adds\n   * the events to there. Will not work if the user has not authorized\n   * Gcal.\n   */\n  const sendToGcal = (calOption, newCalendarName, existingCalendar) => {\n    setEventsStatus('creating');\n    setCalendar(calOption, newCalendarName, existingCalendar)\n      .then(() => {\n        // Add the events to the calendar once successful\n        createEvents();\n      })\n      .catch(error => {\n        props.openToast('Could not create or set calendar', 'error');\n      });\n  };\n\n  return (\n    <div className={classes.classesPage}>\n      <Container className={classes.content}>\n        <Container className={classes.header}>\n          <Typography variant=\"h2\" align=\"center\" component=\"h1\" color=\"inherit\">\n            Review Classes\n          </Typography>\n        </Container>\n        <Container className={classes.classesContainer}>\n          <div className={classes.classList}>\n            {props.extractedClasses.map(cls => (\n              <UMNClass key={cls.id} cls={cls} handleClassChange={props.handleClassChange} />\n            ))}\n          </div>\n          <div className={classes.actionCol}>\n            <EventsActions\n              sendToGcal={sendToGcal}\n              authorizeGcal={authorizeGcal}\n              gcalClient={gcalClient}\n              signedIn={signedIn}\n              openToast={props.openToast}\n            >\n              {eventsStatus === 'creating' && (\n                <div className={classes.loadingOverlay}>\n                  <CircularProgress />\n                </div>\n              )}\n            </EventsActions>\n          </div>\n        </Container>\n      </Container>\n    </div>\n  );\n}\n\nClassesPage.propTypes = {\n  extractedClasses: PropTypes.array.isRequired,\n  handleClassChange: PropTypes.func.isRequired,\n  openToast: PropTypes.func.isRequired\n};\n\nexport default ClassesPage;\n","import React from 'react';\nimport { makeStyles, Card, CardContent, Typography } from '@material-ui/core';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  successCard: {\n    maxWidth: '800px',\n    maxHeight: '400px',\n    width: '100%',\n    padding: '50px',\n    backgroundColor: theme.palette.success.main\n  },\n  successContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n  successIcon: {\n    fontSize: '120px',\n    marginBottom: theme.spacing(2),\n    color: theme.palette.grey[200]\n  },\n  successText: {\n    color: theme.palette.grey[200]\n  }\n}));\n\nfunction SuccessPage() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.pageContent}>\n      <Card className={classes.successCard}>\n        <CardContent className={classes.successContent}>\n          <CheckCircleOutlineIcon className={classes.successIcon} />\n          <Typography variant=\"h1\" component=\"h1\" className={classes.successText}>\n            Success\n          </Typography>\n          <Typography className={classes.successText}>Check your Google Calendar</Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default SuccessPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Dialog,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  DialogContent,\n  Typography,\n  DialogActions,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    maxWidth: '960px',\n    width: '100%'\n  }\n}));\n\nfunction InstructionDialog(props) {\n  const classes = useStyles();\n  const { open, onClose } = props;\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\">\n      <DialogTitle id=\"simple-dialog-title\">How To</DialogTitle>\n      <DialogContent className={classes.content}>\n        <List component=\"nav\" dense>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>1.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              Go to myu.umn.edu, click on academics, and go to the 'My Classes' tab.\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>2.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              Click to a week where all the classes appear. (If the first week doesn't have classes\n              on Monday for instance, go to the second week so the Monday classes can be seen.)\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>3.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              Take a screenshot of the entire schedule and save it locally. Make sure the days of\n              the week at the top of each column are in the screenshot.\n            </ListItemText>\n          </ListItem>\n          <ListItem style={{ display: 'text', justifyContent: 'center' }}>\n            <img src=\"example-calendar.png\" height=\"400\" alt=\"Example Calendar\" />\n          </ListItem>\n\n          <ListItem>\n            <ListItemIcon>\n              <Typography>4.</Typography>\n            </ListItemIcon>\n            <ListItemText>Upload the image here and wait for the classes to be read.</ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>5.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              After the classes have been loaded, correct any data that is wrong by clicking the\n              class and directly editing it.\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <Typography>6.</Typography>\n            </ListItemIcon>\n            <ListItemText>\n              Authorize the app to use your Google Calendar, and set your calendar creation options.\n              Then submit and voilà.\n            </ListItemText>\n          </ListItem>\n        </List>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nInstructionDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nexport default InstructionDialog;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core';\n\nimport Navbar from './components/Navbar';\nimport HomePage from './components/HomePage';\nimport UploadPage from './components/UploadPage';\nimport Toast from './components/Toast';\nimport ClassesPage from './components/ClassesPage';\nimport SuccessPage from './components/SuccessPage';\nimport InstructionDialog from './components/InstructionDialog';\n\nconst appTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#913447',\n      main: '#760219',\n      dark: '#520111',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#FFDF7E',\n      main: '#FFD75E',\n      dark: '#b29641',\n      contrastText: '#000'\n    }\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  background: {\n    display: 'flex',\n    height: '100vh',\n    width: '100vw',\n    background: 'url(\"gopher.jpg\") no-repeat center center fixed',\n    backgroundSize: 'cover'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [extractedClasses, setExtractedClasses] = useState([]);\n  const [toastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastVariant, setToastVariant] = useState('error');\n  const [instructionsOpen, setInstructionsOpen] = useState(false);\n\n  /**\n   * Function to be passed to the upload component to set the classes on the app\n   */\n  const handleExtractedClasses = data => {\n    setExtractedClasses(data);\n  };\n\n  /**\n   * Passed to the UMNClass component to handle the editing of classes. Simply\n   * replaces the class in the extracted classes array with the argument class\n   */\n  const handleClassChange = cls => {\n    const i = extractedClasses.indexOf(cls);\n    extractedClasses.splice(i, 1, cls);\n    setExtractedClasses(extractedClasses);\n  };\n\n  /**\n   * Closes the toast message\n   */\n  const handleToastClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setToastOpen(false);\n  };\n\n  /**\n   * Opens the toast with a message and a color variant\n   */\n  const handleToastOpen = (message, variant) => {\n    setToastOpen(true);\n    setToastMessage(message);\n    setToastVariant(variant);\n  };\n\n  const handleInstructionsOpen = () => {\n    setInstructionsOpen(true);\n  };\n\n  const handleInstructionsClose = () => {\n    setInstructionsOpen(false);\n  };\n\n  /**\n   * Generates a route component that will only be rendered if there are classes\n   */\n  const ClassesRequiredRoute = ({ component, children, ...rest }) => (\n    <Route {...rest}>{extractedClasses.length !== 0 ? children : <Redirect to=\"/\" />}</Route>\n  );\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ThemeProvider theme={appTheme}>\n        <div className={classes.background}>\n          <Router>\n            <Navbar openInstructions={handleInstructionsOpen}></Navbar>\n            <Route exact path=\"/\">\n              <HomePage openInstructions={handleInstructionsOpen} />\n            </Route>\n            <Route exact path=\"/upload\">\n              <UploadPage openToast={handleToastOpen} handleClasses={handleExtractedClasses} />\n            </Route>\n            <Route exact path=\"/success\">\n              <SuccessPage />\n            </Route>\n            <ClassesRequiredRoute exact path=\"/classes\">\n              <ClassesPage\n                extractedClasses={extractedClasses}\n                handleClassChange={handleClassChange}\n                openToast={handleToastOpen}\n              />\n            </ClassesRequiredRoute>\n            <Toast\n              open={toastOpen}\n              handleClose={handleToastClose}\n              message={toastMessage}\n              variant={toastVariant}\n            />\n            <InstructionDialog open={instructionsOpen} onClose={handleInstructionsClose} />\n          </Router>\n        </div>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}